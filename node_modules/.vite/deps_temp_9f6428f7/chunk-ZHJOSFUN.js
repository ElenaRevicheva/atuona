import {
  uint8ArrayToHex
} from "./chunk-SS3OIJZU.js";

// node_modules/thirdweb/dist/esm/utils/bigint.js
function min(a, b) {
  return a < b ? a : b;
}
function toBigInt(value) {
  if (["string", "number"].includes(typeof value) && !Number.isInteger(Number(value))) {
    throw new Error(`Expected value to be an integer to convert to a bigint, got ${value} of type ${typeof value}`);
  }
  if (value instanceof Uint8Array) {
    return BigInt(uint8ArrayToHex(value));
  }
  return BigInt(value);
}
var replaceBigInts = (obj, replacer) => {
  if (typeof obj === "bigint")
    return replacer(obj);
  if (Array.isArray(obj))
    return obj.map((x) => replaceBigInts(x, replacer));
  if (obj && typeof obj === "object")
    return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, replaceBigInts(v, replacer)]));
  return obj;
};

export {
  min,
  toBigInt,
  replaceBigInts
};
//# sourceMappingURL=chunk-ZHJOSFUN.js.map
