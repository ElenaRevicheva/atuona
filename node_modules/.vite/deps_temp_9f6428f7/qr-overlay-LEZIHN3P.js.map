{
  "version": 3,
  "sources": ["../../thirdweb/src/wallets/wallet-connect/qr-overlay.ts"],
  "sourcesContent": ["/**\n * Vanilla JavaScript QR Code overlay utility for WalletConnect URIs\n * Works in any browser context without requiring React or other frameworks\n */\n\ninterface QROverlayOptions {\n  /**\n   * Custom styles to apply to the overlay\n   */\n  overlayStyles?: Partial<CSSStyleDeclaration>;\n  /**\n   * Custom styles to apply to the modal container\n   */\n  modalStyles?: Partial<CSSStyleDeclaration>;\n  /**\n   * QR code size in pixels\n   */\n  qrSize?: number;\n  /**\n   * Show close button\n   */\n  showCloseButton?: boolean;\n  /**\n   * Custom close button text\n   */\n  closeButtonText?: string;\n  /**\n   * Theme preference\n   */\n  theme?: \"light\" | \"dark\";\n  /**\n   * Custom container element to append the overlay to\n   */\n  container?: HTMLElement;\n  /**\n   * Callback called when user cancels the overlay (closes without connecting)\n   */\n  onCancel?: () => void;\n}\n\nexport interface QROverlay {\n  /**\n   * Remove the overlay from the DOM\n   */\n  destroy: () => void;\n  /**\n   * Hide the overlay (without removing from DOM)\n   */\n  hide: () => void;\n  /**\n   * Show the overlay\n   */\n  show: () => void;\n}\n\n/**\n * Creates a QR code overlay for the given WalletConnect URI\n */\nexport function createQROverlay(\n  uri: string,\n  options: QROverlayOptions = {},\n): QROverlay {\n  const {\n    qrSize = 280,\n    showCloseButton = true,\n    closeButtonText = \"Ã—\",\n    theme = \"light\",\n    container = document.body,\n    onCancel,\n  } = options;\n\n  // Create overlay backdrop\n  const overlay = document.createElement(\"div\");\n  overlay.style.cssText = `\n    position: fixed;\n    inset: 0;\n    background-color: ${theme === \"dark\" ? \"rgba(0, 0, 0, 0.8)\" : \"rgba(0, 0, 0, 0.5)\"};\n    backdrop-filter: blur(10px);\n    z-index: 9999;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    animation: fadeIn 300ms ease-out;\n  `;\n\n  // Apply custom overlay styles\n  if (options.overlayStyles) {\n    Object.assign(overlay.style, options.overlayStyles);\n  }\n\n  // Create modal container\n  const modal = document.createElement(\"div\");\n  modal.style.cssText = `\n    background: ${theme === \"dark\" ? \"#1f1f1f\" : \"#ffffff\"};\n    border-radius: 16px;\n    padding: 24px;\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n    max-width: 90vw;\n    max-height: 90vh;\n    position: relative;\n    animation: scaleIn 300ms ease-out;\n  `;\n\n  // Apply custom modal styles\n  if (options.modalStyles) {\n    Object.assign(modal.style, options.modalStyles);\n  }\n\n  // Create close button\n  if (showCloseButton) {\n    const closeButton = document.createElement(\"button\");\n    closeButton.textContent = closeButtonText;\n    closeButton.style.cssText = `\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      background: none;\n      border: none;\n      font-size: 24px;\n      cursor: pointer;\n      color: ${theme === \"dark\" ? \"#ffffff\" : \"#000000\"};\n      width: 32px;\n      height: 32px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 8px;\n      transition: background-color 0.2s;\n    `;\n\n    closeButton.addEventListener(\"mouseenter\", () => {\n      closeButton.style.backgroundColor =\n        theme === \"dark\" ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\";\n    });\n\n    closeButton.addEventListener(\"mouseleave\", () => {\n      closeButton.style.backgroundColor = \"transparent\";\n    });\n\n    closeButton.addEventListener(\"click\", () => {\n      destroyOverlay(true);\n    });\n\n    modal.appendChild(closeButton);\n  }\n\n  // Create QR code container\n  const qrContainer = document.createElement(\"div\");\n  qrContainer.style.cssText = `\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 16px;\n  `;\n\n  // Create title\n  const title = document.createElement(\"h3\");\n  title.textContent = \"Scan to Connect\";\n  title.style.cssText = `\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n    color: ${theme === \"dark\" ? \"#ffffff\" : \"#000000\"};\n    text-align: center;\n  `;\n\n  // Create QR code canvas\n  const qrCanvas = document.createElement(\"canvas\");\n  qrCanvas.width = qrSize;\n  qrCanvas.height = qrSize;\n  qrCanvas.style.cssText = `\n    border: 1px solid ${theme === \"dark\" ? \"#333333\" : \"#e5e5e5\"};\n    border-radius: 12px;\n  `;\n\n  // Generate QR code\n  generateQRCode(uri, qrCanvas, qrSize).catch(console.error);\n\n  // Create copy button for the URI\n  const copyButton = document.createElement(\"button\");\n  copyButton.textContent = \"Copy URI\";\n  copyButton.style.cssText = `\n    background: ${theme === \"dark\" ? \"#333333\" : \"#f5f5f5\"};\n    border: 1px solid ${theme === \"dark\" ? \"#444444\" : \"#e5e5e5\"};\n    color: ${theme === \"dark\" ? \"#ffffff\" : \"#000000\"};\n    padding: 8px 16px;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 14px;\n    transition: background-color 0.2s;\n  `;\n\n  copyButton.addEventListener(\"click\", async () => {\n    try {\n      await navigator.clipboard.writeText(uri);\n      const originalText = copyButton.textContent;\n      copyButton.textContent = \"Copied!\";\n      setTimeout(() => {\n        copyButton.textContent = originalText;\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy URI:\", err);\n    }\n  });\n\n  // Assemble the modal\n  qrContainer.appendChild(title);\n  qrContainer.appendChild(qrCanvas);\n  qrContainer.appendChild(copyButton);\n  modal.appendChild(qrContainer);\n  overlay.appendChild(modal);\n\n  // Add CSS animations\n  const style = document.createElement(\"style\");\n  style.textContent = `\n    @keyframes fadeIn {\n      from { opacity: 0; }\n      to { opacity: 1; }\n    }\n    @keyframes fadeOut {\n      from { opacity: 1; }\n      to { opacity: 0; }\n    }\n    @keyframes scaleIn {\n      from { transform: scale(0.9); opacity: 0; }\n      to { transform: scale(1); opacity: 1; }\n    }\n    @keyframes scaleOut {\n      from { transform: scale(1); opacity: 1; }\n      to { transform: scale(0.9); opacity: 0; }\n    }\n  `;\n  document.head.appendChild(style);\n\n  // Event handlers\n  const handleEscapeKey = (event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      destroyOverlay(true);\n    }\n  };\n\n  const handleOverlayClick = (event: MouseEvent) => {\n    if (event.target === overlay) {\n      destroyOverlay(true);\n    }\n  };\n\n  // Add event listeners\n  document.addEventListener(\"keydown\", handleEscapeKey);\n  overlay.addEventListener(\"click\", handleOverlayClick);\n\n  // Append to container\n  container.appendChild(overlay);\n\n  function destroyOverlay(userInitiated = false) {\n    document.removeEventListener(\"keydown\", handleEscapeKey);\n    overlay.removeEventListener(\"click\", handleOverlayClick);\n\n    // Call onCancel callback only if user initiated the close action\n    if (userInitiated && onCancel) {\n      onCancel();\n    }\n\n    // Animate both overlay and modal out\n    overlay.style.animation = \"fadeOut 200ms ease-in\";\n    modal.style.animation = \"scaleOut 200ms ease-in\";\n\n    const cleanup = () => {\n      if (overlay.parentNode) {\n        overlay.parentNode.removeChild(overlay);\n      }\n      if (style.parentNode) {\n        style.parentNode.removeChild(style);\n      }\n    };\n\n    overlay.addEventListener(\"animationend\", cleanup, { once: true });\n\n    // Fallback cleanup in case animation doesn't fire\n    setTimeout(cleanup, 250);\n  }\n\n  function hideOverlay() {\n    overlay.style.display = \"none\";\n  }\n\n  function showOverlay() {\n    overlay.style.display = \"flex\";\n  }\n\n  return {\n    destroy: () => destroyOverlay(false), // Programmatic cleanup, don't call onCancel\n    hide: hideOverlay,\n    show: showOverlay,\n  };\n}\n\n/**\n * QR code generator that tries to use a real QR library if available,\n * otherwise falls back to a placeholder\n */\nasync function generateQRCode(\n  text: string,\n  canvas: HTMLCanvasElement,\n  size: number,\n) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return;\n\n  // Try to dynamically import a QR code library if available\n  // This allows the overlay to work with or without a QR code dependency\n  const { toCanvas } = await import(\"qrcode\");\n  await toCanvas(canvas, text, {\n    width: size,\n    margin: 2,\n    color: {\n      dark: \"#000000\",\n      light: \"#ffffff\",\n    },\n  });\n  return;\n}\n"],
  "mappings": "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",
  "names": []
}
