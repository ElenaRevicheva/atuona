{
  "version": 3,
  "sources": ["../../thirdweb/src/react/web/wallets/shared/CoinbaseSDKConnection.tsx"],
  "sourcesContent": ["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport type { WalletInfo } from \"../../../../wallets/wallet-info.js\";\nimport type { InjectedWalletLocale } from \"../injected/locale/types.js\";\nimport { ConnectingScreen } from \"./ConnectingScreen.js\";\n\n/**\n * @internal\n */\nfunction ExternalWalletConnectUI(props: {\n  onBack?: () => void;\n  onGetStarted: () => void;\n  done: () => void;\n  locale: InjectedWalletLocale;\n  wallet: Wallet;\n  walletInfo: WalletInfo;\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  size: \"compact\" | \"wide\";\n}) {\n  const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;\n  const [errorConnecting, setErrorConnecting] = useState(false);\n\n  const connect = useCallback(() => {\n    setErrorConnecting(false);\n    wallet\n      .connect({\n        chain: props.chain,\n        client: props.client,\n      })\n      .then(() => {\n        done();\n      })\n      .catch((e) => {\n        console.error(e);\n        setErrorConnecting(true);\n      });\n  }, [props.client, wallet, props.chain, done]);\n\n  const scanStarted = useRef(false);\n  useEffect(() => {\n    if (scanStarted.current) {\n      return;\n    }\n    scanStarted.current = true;\n    connect();\n  }, [connect]);\n\n  return (\n    <ConnectingScreen\n      client={props.client}\n      errorConnecting={errorConnecting}\n      locale={{\n        failed: locale.connectionScreen.failed,\n        getStartedLink: locale.getStartedLink,\n        inProgress: locale.connectionScreen.inProgress,\n        instruction: locale.connectionScreen.instruction,\n        tryAgain: locale.connectionScreen.retry,\n      }}\n      onBack={onBack}\n      onGetStarted={onGetStarted}\n      onRetry={connect}\n      size={props.size}\n      walletId={wallet.id}\n      walletName={walletInfo.name}\n    />\n  );\n}\n\nexport default ExternalWalletConnectUI;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAyD;AAWzD,SAAS,wBAAwB,OAUhC;AACC,QAAM,EAAE,QAAQ,MAAM,QAAQ,YAAY,cAAc,OAAM,IAAK;AACnE,QAAM,CAAC,iBAAiB,kBAAkB,QAAI,uBAAS,KAAK;AAE5D,QAAM,cAAU,0BAAY,MAAK;AAC/B,uBAAmB,KAAK;AACxB,WACG,QAAQ;MACP,OAAO,MAAM;MACb,QAAQ,MAAM;KACf,EACA,KAAK,MAAK;AACT,WAAI;IACN,CAAC,EACA,MAAM,CAAC,MAAK;AACX,cAAQ,MAAM,CAAC;AACf,yBAAmB,IAAI;IACzB,CAAC;EACL,GAAG,CAAC,MAAM,QAAQ,QAAQ,MAAM,OAAO,IAAI,CAAC;AAE5C,QAAM,kBAAc,qBAAO,KAAK;AAChC,8BAAU,MAAK;AACb,QAAI,YAAY,SAAS;AACvB;IACF;AACA,gBAAY,UAAU;AACtB,YAAO;EACT,GAAG,CAAC,OAAO,CAAC;AAEZ,aACE,mBAAAA,KAAC,kBAAgB,EACf,QAAQ,MAAM,QACd,iBACA,QAAQ;IACN,QAAQ,OAAO,iBAAiB;IAChC,gBAAgB,OAAO;IACvB,YAAY,OAAO,iBAAiB;IACpC,aAAa,OAAO,iBAAiB;IACrC,UAAU,OAAO,iBAAiB;KAEpC,QACA,cACA,SAAS,SACT,MAAM,MAAM,MACZ,UAAU,OAAO,IACjB,YAAY,WAAW,KAAI,CAAA;AAGjC;AAEA,IAAA,gCAAe;",
  "names": ["_jsx"]
}
