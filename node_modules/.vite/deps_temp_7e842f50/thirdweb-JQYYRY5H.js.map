{
  "version": 3,
  "sources": ["../../@thirdweb-dev/insight/src/client/core/bodySerializer.ts", "../../@thirdweb-dev/insight/src/client/core/params.ts", "../../@thirdweb-dev/insight/src/client/core/auth.ts", "../../@thirdweb-dev/insight/src/client/core/pathSerializer.ts", "../../@thirdweb-dev/insight/src/client/client/utils.ts", "../../@thirdweb-dev/insight/src/client/client/client.ts", "../../@thirdweb-dev/insight/src/client/client.gen.ts", "../../@thirdweb-dev/insight/src/client/sdk.gen.ts", "../../@thirdweb-dev/insight/src/configure.ts"],
  "sourcesContent": ["import type {\n\tArrayStyle,\n\tObjectStyle,\n\tSerializerOptions,\n} from \"./pathSerializer.js\";\n\nexport type QuerySerializer = (query: Record<string, unknown>) => string;\n\nexport type BodySerializer = (body: any) => any;\n\nexport interface QuerySerializerOptions {\n\tallowReserved?: boolean;\n\tarray?: SerializerOptions<ArrayStyle>;\n\tobject?: SerializerOptions<ObjectStyle>;\n}\n\nconst serializeFormDataPair = (data: FormData, key: string, value: unknown) => {\n\tif (typeof value === \"string\" || value instanceof Blob) {\n\t\tdata.append(key, value);\n\t} else {\n\t\tdata.append(key, JSON.stringify(value));\n\t}\n};\n\nconst serializeUrlSearchParamsPair = (\n\tdata: URLSearchParams,\n\tkey: string,\n\tvalue: unknown,\n) => {\n\tif (typeof value === \"string\") {\n\t\tdata.append(key, value);\n\t} else {\n\t\tdata.append(key, JSON.stringify(value));\n\t}\n};\n\nexport const formDataBodySerializer = {\n\tbodySerializer: <T extends Record<string, any> | Array<Record<string, any>>>(\n\t\tbody: T,\n\t) => {\n\t\tconst data = new FormData();\n\n\t\tObject.entries(body).forEach(([key, value]) => {\n\t\t\tif (value === undefined || value === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach((v) => serializeFormDataPair(data, key, v));\n\t\t\t} else {\n\t\t\t\tserializeFormDataPair(data, key, value);\n\t\t\t}\n\t\t});\n\n\t\treturn data;\n\t},\n};\n\nexport const jsonBodySerializer = {\n\tbodySerializer: <T>(body: T) =>\n\t\tJSON.stringify(body, (_key, value) =>\n\t\t\ttypeof value === \"bigint\" ? value.toString() : value,\n\t\t),\n};\n\nexport const urlSearchParamsBodySerializer = {\n\tbodySerializer: <T extends Record<string, any> | Array<Record<string, any>>>(\n\t\tbody: T,\n\t) => {\n\t\tconst data = new URLSearchParams();\n\n\t\tObject.entries(body).forEach(([key, value]) => {\n\t\t\tif (value === undefined || value === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach((v) => serializeUrlSearchParamsPair(data, key, v));\n\t\t\t} else {\n\t\t\t\tserializeUrlSearchParamsPair(data, key, value);\n\t\t\t}\n\t\t});\n\n\t\treturn data.toString();\n\t},\n};\n", "type Slot = \"body\" | \"headers\" | \"path\" | \"query\";\n\nexport type Field =\n\t| {\n\t\t\tin: Exclude<Slot, \"body\">;\n\t\t\tkey: string;\n\t\t\tmap?: string;\n\t  }\n\t| {\n\t\t\tin: Extract<Slot, \"body\">;\n\t\t\tkey?: string;\n\t\t\tmap?: string;\n\t  };\n\nexport interface Fields {\n\tallowExtra?: Partial<Record<Slot, boolean>>;\n\targs?: ReadonlyArray<Field>;\n}\n\nexport type FieldsConfig = ReadonlyArray<Field | Fields>;\n\nconst extraPrefixesMap: Record<string, Slot> = {\n\t$body_: \"body\",\n\t$headers_: \"headers\",\n\t$path_: \"path\",\n\t$query_: \"query\",\n};\nconst extraPrefixes = Object.entries(extraPrefixesMap);\n\ntype KeyMap = Map<\n\tstring,\n\t{\n\t\tin: Slot;\n\t\tmap?: string;\n\t}\n>;\n\nconst buildKeyMap = (fields: FieldsConfig, map?: KeyMap): KeyMap => {\n\tif (!map) {\n\t\tmap = new Map();\n\t}\n\n\tfor (const config of fields) {\n\t\tif (\"in\" in config) {\n\t\t\tif (config.key) {\n\t\t\t\tmap.set(config.key, {\n\t\t\t\t\tin: config.in,\n\t\t\t\t\tmap: config.map,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (config.args) {\n\t\t\tbuildKeyMap(config.args, map);\n\t\t}\n\t}\n\n\treturn map;\n};\n\ninterface Params {\n\tbody: unknown;\n\theaders: Record<string, unknown>;\n\tpath: Record<string, unknown>;\n\tquery: Record<string, unknown>;\n}\n\nconst stripEmptySlots = (params: Params) => {\n\tfor (const [slot, value] of Object.entries(params)) {\n\t\tif (value && typeof value === \"object\" && !Object.keys(value).length) {\n\t\t\tdelete params[slot as Slot];\n\t\t}\n\t}\n};\n\nexport const buildClientParams = (\n\targs: ReadonlyArray<unknown>,\n\tfields: FieldsConfig,\n) => {\n\tconst params: Params = {\n\t\tbody: {},\n\t\theaders: {},\n\t\tpath: {},\n\t\tquery: {},\n\t};\n\n\tconst map = buildKeyMap(fields);\n\n\tlet config: FieldsConfig[number] | undefined;\n\n\tfor (const [index, arg] of args.entries()) {\n\t\tif (fields[index]) {\n\t\t\tconfig = fields[index];\n\t\t}\n\n\t\tif (!config) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\"in\" in config) {\n\t\t\tif (config.key) {\n\t\t\t\tconst field = map.get(config.key)!;\n\t\t\t\tconst name = field.map || config.key;\n\t\t\t\t(params[field.in] as Record<string, unknown>)[name] = arg;\n\t\t\t} else {\n\t\t\t\tparams.body = arg;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(arg ?? {})) {\n\t\t\t\tconst field = map.get(key);\n\n\t\t\t\tif (field) {\n\t\t\t\t\tconst name = field.map || key;\n\t\t\t\t\t(params[field.in] as Record<string, unknown>)[name] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconst extra = extraPrefixes.find(([prefix]) =>\n\t\t\t\t\t\tkey.startsWith(prefix),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (extra) {\n\t\t\t\t\t\tconst [prefix, slot] = extra;\n\t\t\t\t\t\t(params[slot] as Record<string, unknown>)[\n\t\t\t\t\t\t\tkey.slice(prefix.length)\n\t\t\t\t\t\t] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const [slot, allowed] of Object.entries(\n\t\t\t\t\t\t\tconfig.allowExtra ?? {},\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tif (allowed) {\n\t\t\t\t\t\t\t\t(params[slot as Slot] as Record<string, unknown>)[key] = value;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstripEmptySlots(params);\n\n\treturn params;\n};\n", "export type AuthToken = string | undefined;\n\nexport interface Auth {\n\t/**\n\t * Which part of the request do we use to send the auth?\n\t *\n\t * @default 'header'\n\t */\n\tin?: \"header\" | \"query\" | \"cookie\";\n\t/**\n\t * Header or query parameter name.\n\t *\n\t * @default 'Authorization'\n\t */\n\tname?: string;\n\tscheme?: \"basic\" | \"bearer\";\n\ttype: \"apiKey\" | \"http\";\n}\n\nexport const getAuthToken = async (\n\tauth: Auth,\n\tcallback: ((auth: Auth) => Promise<AuthToken> | AuthToken) | AuthToken,\n): Promise<string | undefined> => {\n\tconst token =\n\t\ttypeof callback === \"function\" ? await callback(auth) : callback;\n\n\tif (!token) {\n\t\treturn;\n\t}\n\n\tif (auth.scheme === \"bearer\") {\n\t\treturn `Bearer ${token}`;\n\t}\n\n\tif (auth.scheme === \"basic\") {\n\t\treturn `Basic ${btoa(token)}`;\n\t}\n\n\treturn token;\n};\n", "interface SerializeOptions<T>\n\textends SerializePrimitiveOptions,\n\t\tSerializerOptions<T> {}\n\ninterface SerializePrimitiveOptions {\n\tallowReserved?: boolean;\n\tname: string;\n}\n\nexport interface SerializerOptions<T> {\n\t/**\n\t * @default true\n\t */\n\texplode: boolean;\n\tstyle: T;\n}\n\nexport type ArrayStyle = \"form\" | \"spaceDelimited\" | \"pipeDelimited\";\nexport type ArraySeparatorStyle = ArrayStyle | MatrixStyle;\ntype MatrixStyle = \"label\" | \"matrix\" | \"simple\";\nexport type ObjectStyle = \"form\" | \"deepObject\";\ntype ObjectSeparatorStyle = ObjectStyle | MatrixStyle;\n\ninterface SerializePrimitiveParam extends SerializePrimitiveOptions {\n\tvalue: string;\n}\n\nexport const separatorArrayExplode = (style: ArraySeparatorStyle) => {\n\tswitch (style) {\n\t\tcase \"label\":\n\t\t\treturn \".\";\n\t\tcase \"matrix\":\n\t\t\treturn \";\";\n\t\tcase \"simple\":\n\t\t\treturn \",\";\n\t\tdefault:\n\t\t\treturn \"&\";\n\t}\n};\n\nexport const separatorArrayNoExplode = (style: ArraySeparatorStyle) => {\n\tswitch (style) {\n\t\tcase \"form\":\n\t\t\treturn \",\";\n\t\tcase \"pipeDelimited\":\n\t\t\treturn \"|\";\n\t\tcase \"spaceDelimited\":\n\t\t\treturn \"%20\";\n\t\tdefault:\n\t\t\treturn \",\";\n\t}\n};\n\nexport const separatorObjectExplode = (style: ObjectSeparatorStyle) => {\n\tswitch (style) {\n\t\tcase \"label\":\n\t\t\treturn \".\";\n\t\tcase \"matrix\":\n\t\t\treturn \";\";\n\t\tcase \"simple\":\n\t\t\treturn \",\";\n\t\tdefault:\n\t\t\treturn \"&\";\n\t}\n};\n\nexport const serializeArrayParam = ({\n\tallowReserved,\n\texplode,\n\tname,\n\tstyle,\n\tvalue,\n}: SerializeOptions<ArraySeparatorStyle> & {\n\tvalue: unknown[];\n}) => {\n\tif (!explode) {\n\t\tconst joinedValues = (\n\t\t\tallowReserved ? value : value.map((v) => encodeURIComponent(v as string))\n\t\t).join(separatorArrayNoExplode(style));\n\t\tswitch (style) {\n\t\t\tcase \"label\":\n\t\t\t\treturn `.${joinedValues}`;\n\t\t\tcase \"matrix\":\n\t\t\t\treturn `;${name}=${joinedValues}`;\n\t\t\tcase \"simple\":\n\t\t\t\treturn joinedValues;\n\t\t\tdefault:\n\t\t\t\treturn `${name}=${joinedValues}`;\n\t\t}\n\t}\n\n\tconst separator = separatorArrayExplode(style);\n\tconst joinedValues = value\n\t\t.map((v) => {\n\t\t\tif (style === \"label\" || style === \"simple\") {\n\t\t\t\treturn allowReserved ? v : encodeURIComponent(v as string);\n\t\t\t}\n\n\t\t\treturn serializePrimitiveParam({\n\t\t\t\tallowReserved,\n\t\t\t\tname,\n\t\t\t\tvalue: v as string,\n\t\t\t});\n\t\t})\n\t\t.join(separator);\n\treturn style === \"label\" || style === \"matrix\"\n\t\t? separator + joinedValues\n\t\t: joinedValues;\n};\n\nexport const serializePrimitiveParam = ({\n\tallowReserved,\n\tname,\n\tvalue,\n}: SerializePrimitiveParam) => {\n\tif (value === undefined || value === null) {\n\t\treturn \"\";\n\t}\n\n\tif (typeof value === \"object\") {\n\t\tthrow new Error(\n\t\t\t\"Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.\",\n\t\t);\n\t}\n\n\treturn `${name}=${allowReserved ? value : encodeURIComponent(value)}`;\n};\n\nexport const serializeObjectParam = ({\n\tallowReserved,\n\texplode,\n\tname,\n\tstyle,\n\tvalue,\n\tvalueOnly,\n}: SerializeOptions<ObjectSeparatorStyle> & {\n\tvalue: Record<string, unknown> | Date;\n\tvalueOnly?: boolean;\n}) => {\n\tif (value instanceof Date) {\n\t\treturn valueOnly ? value.toISOString() : `${name}=${value.toISOString()}`;\n\t}\n\n\tif (style !== \"deepObject\" && !explode) {\n\t\tlet values: string[] = [];\n\t\tObject.entries(value).forEach(([key, v]) => {\n\t\t\tvalues = [\n\t\t\t\t...values,\n\t\t\t\tkey,\n\t\t\t\tallowReserved ? (v as string) : encodeURIComponent(v as string),\n\t\t\t];\n\t\t});\n\t\tconst joinedValues = values.join(\",\");\n\t\tswitch (style) {\n\t\t\tcase \"form\":\n\t\t\t\treturn `${name}=${joinedValues}`;\n\t\t\tcase \"label\":\n\t\t\t\treturn `.${joinedValues}`;\n\t\t\tcase \"matrix\":\n\t\t\t\treturn `;${name}=${joinedValues}`;\n\t\t\tdefault:\n\t\t\t\treturn joinedValues;\n\t\t}\n\t}\n\n\tconst separator = separatorObjectExplode(style);\n\tconst joinedValues = Object.entries(value)\n\t\t.map(([key, v]) =>\n\t\t\tserializePrimitiveParam({\n\t\t\t\tallowReserved,\n\t\t\t\tname: style === \"deepObject\" ? `${name}[${key}]` : key,\n\t\t\t\tvalue: v as string,\n\t\t\t}),\n\t\t)\n\t\t.join(separator);\n\treturn style === \"label\" || style === \"matrix\"\n\t\t? separator + joinedValues\n\t\t: joinedValues;\n};\n", "import { getAuthToken } from \"../core/auth.js\";\nimport type {\n\tQuerySerializer,\n\tQuerySerializerOptions,\n} from \"../core/bodySerializer.js\";\nimport { jsonBodySerializer } from \"../core/bodySerializer.js\";\nimport {\n\tserializeArrayParam,\n\tserializeObjectParam,\n\tserializePrimitiveParam,\n} from \"../core/pathSerializer.js\";\nimport type { Client, ClientOptions, Config, RequestOptions } from \"./types.js\";\n\ninterface PathSerializer {\n\tpath: Record<string, unknown>;\n\turl: string;\n}\n\nconst PATH_PARAM_RE = /\\{[^{}]+\\}/g;\n\ntype ArrayStyle = \"form\" | \"spaceDelimited\" | \"pipeDelimited\";\ntype MatrixStyle = \"label\" | \"matrix\" | \"simple\";\ntype ArraySeparatorStyle = ArrayStyle | MatrixStyle;\n\nconst defaultPathSerializer = ({ path, url: _url }: PathSerializer) => {\n\tlet url = _url;\n\tconst matches = _url.match(PATH_PARAM_RE);\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tlet explode = false;\n\t\t\tlet name = match.substring(1, match.length - 1);\n\t\t\tlet style: ArraySeparatorStyle = \"simple\";\n\n\t\t\tif (name.endsWith(\"*\")) {\n\t\t\t\texplode = true;\n\t\t\t\tname = name.substring(0, name.length - 1);\n\t\t\t}\n\n\t\t\tif (name.startsWith(\".\")) {\n\t\t\t\tname = name.substring(1);\n\t\t\t\tstyle = \"label\";\n\t\t\t} else if (name.startsWith(\";\")) {\n\t\t\t\tname = name.substring(1);\n\t\t\t\tstyle = \"matrix\";\n\t\t\t}\n\n\t\t\tconst value = path[name];\n\n\t\t\tif (value === undefined || value === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\turl = url.replace(\n\t\t\t\t\tmatch,\n\t\t\t\t\tserializeArrayParam({ explode, name, style, value }),\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof value === \"object\") {\n\t\t\t\turl = url.replace(\n\t\t\t\t\tmatch,\n\t\t\t\t\tserializeObjectParam({\n\t\t\t\t\t\texplode,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tstyle,\n\t\t\t\t\t\tvalue: value as Record<string, unknown>,\n\t\t\t\t\t\tvalueOnly: true,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (style === \"matrix\") {\n\t\t\t\turl = url.replace(\n\t\t\t\t\tmatch,\n\t\t\t\t\t`;${serializePrimitiveParam({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tvalue: value as string,\n\t\t\t\t\t})}`,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst replaceValue = encodeURIComponent(\n\t\t\t\tstyle === \"label\" ? `.${value as string}` : (value as string),\n\t\t\t);\n\t\t\turl = url.replace(match, replaceValue);\n\t\t}\n\t}\n\treturn url;\n};\n\nexport const createQuerySerializer = <T = unknown>({\n\tallowReserved,\n\tarray,\n\tobject,\n}: QuerySerializerOptions = {}) => {\n\tconst querySerializer = (queryParams: T) => {\n\t\tconst search: string[] = [];\n\t\tif (queryParams && typeof queryParams === \"object\") {\n\t\t\tfor (const name in queryParams) {\n\t\t\t\tconst value = queryParams[name];\n\n\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tconst serializedArray = serializeArrayParam({\n\t\t\t\t\t\tallowReserved,\n\t\t\t\t\t\texplode: true,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tstyle: \"form\",\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t...array,\n\t\t\t\t\t});\n\t\t\t\t\tif (serializedArray) search.push(serializedArray);\n\t\t\t\t} else if (typeof value === \"object\") {\n\t\t\t\t\tconst serializedObject = serializeObjectParam({\n\t\t\t\t\t\tallowReserved,\n\t\t\t\t\t\texplode: true,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tstyle: \"deepObject\",\n\t\t\t\t\t\tvalue: value as Record<string, unknown>,\n\t\t\t\t\t\t...object,\n\t\t\t\t\t});\n\t\t\t\t\tif (serializedObject) search.push(serializedObject);\n\t\t\t\t} else {\n\t\t\t\t\tconst serializedPrimitive = serializePrimitiveParam({\n\t\t\t\t\t\tallowReserved,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tvalue: value as string,\n\t\t\t\t\t});\n\t\t\t\t\tif (serializedPrimitive) search.push(serializedPrimitive);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn search.join(\"&\");\n\t};\n\treturn querySerializer;\n};\n\n/**\n * Infers parseAs value from provided Content-Type header.\n */\nexport const getParseAs = (\n\tcontentType: string | null,\n): Exclude<Config[\"parseAs\"], \"auto\"> => {\n\tif (!contentType) {\n\t\t// If no Content-Type header is provided, the best we can do is return the raw response body,\n\t\t// which is effectively the same as the 'stream' option.\n\t\treturn \"stream\";\n\t}\n\n\tconst cleanContent = contentType.split(\";\")[0]?.trim();\n\n\tif (!cleanContent) {\n\t\treturn;\n\t}\n\n\tif (\n\t\tcleanContent.startsWith(\"application/json\") ||\n\t\tcleanContent.endsWith(\"+json\")\n\t) {\n\t\treturn \"json\";\n\t}\n\n\tif (cleanContent === \"multipart/form-data\") {\n\t\treturn \"formData\";\n\t}\n\n\tif (\n\t\t[\"application/\", \"audio/\", \"image/\", \"video/\"].some((type) =>\n\t\t\tcleanContent.startsWith(type),\n\t\t)\n\t) {\n\t\treturn \"blob\";\n\t}\n\n\tif (cleanContent.startsWith(\"text/\")) {\n\t\treturn \"text\";\n\t}\n\n\treturn;\n};\n\nexport const setAuthParams = async ({\n\tsecurity,\n\t...options\n}: Pick<Required<RequestOptions>, \"security\"> &\n\tPick<RequestOptions, \"auth\" | \"query\"> & {\n\t\theaders: Headers;\n\t}) => {\n\tfor (const auth of security) {\n\t\tconst token = await getAuthToken(auth, options.auth);\n\n\t\tif (!token) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst name = auth.name ?? \"Authorization\";\n\n\t\tswitch (auth.in) {\n\t\t\tcase \"query\":\n\t\t\t\tif (!options.query) {\n\t\t\t\t\toptions.query = {};\n\t\t\t\t}\n\t\t\t\toptions.query[name] = token;\n\t\t\t\tbreak;\n\t\t\tcase \"cookie\":\n\t\t\t\toptions.headers.append(\"Cookie\", `${name}=${token}`);\n\t\t\t\tbreak;\n\t\t\tcase \"header\":\n\t\t\tdefault:\n\t\t\t\toptions.headers.set(name, token);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn;\n\t}\n};\n\nexport const buildUrl: Client[\"buildUrl\"] = (options) => {\n\tconst url = getUrl({\n\t\tbaseUrl: options.baseUrl as string,\n\t\tpath: options.path,\n\t\tquery: options.query,\n\t\tquerySerializer:\n\t\t\ttypeof options.querySerializer === \"function\"\n\t\t\t\t? options.querySerializer\n\t\t\t\t: createQuerySerializer(options.querySerializer),\n\t\turl: options.url,\n\t});\n\treturn url;\n};\n\nexport const getUrl = ({\n\tbaseUrl,\n\tpath,\n\tquery,\n\tquerySerializer,\n\turl: _url,\n}: {\n\tbaseUrl?: string;\n\tpath?: Record<string, unknown>;\n\tquery?: Record<string, unknown>;\n\tquerySerializer: QuerySerializer;\n\turl: string;\n}) => {\n\tconst pathUrl = _url.startsWith(\"/\") ? _url : `/${_url}`;\n\tlet url = (baseUrl ?? \"\") + pathUrl;\n\tif (path) {\n\t\turl = defaultPathSerializer({ path, url });\n\t}\n\tlet search = query ? querySerializer(query) : \"\";\n\tif (search.startsWith(\"?\")) {\n\t\tsearch = search.substring(1);\n\t}\n\tif (search) {\n\t\turl += `?${search}`;\n\t}\n\treturn url;\n};\n\nexport const mergeConfigs = (a: Config, b: Config): Config => {\n\tconst config = { ...a, ...b };\n\tif (config.baseUrl?.endsWith(\"/\")) {\n\t\tconfig.baseUrl = config.baseUrl.substring(0, config.baseUrl.length - 1);\n\t}\n\tconfig.headers = mergeHeaders(a.headers, b.headers);\n\treturn config;\n};\n\nexport const mergeHeaders = (\n\t...headers: Array<Required<Config>[\"headers\"] | undefined>\n): Headers => {\n\tconst mergedHeaders = new Headers();\n\tfor (const header of headers) {\n\t\tif (!header || typeof header !== \"object\") {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst iterator =\n\t\t\theader instanceof Headers ? header.entries() : Object.entries(header);\n\n\t\tfor (const [key, value] of iterator) {\n\t\t\tif (value === null) {\n\t\t\t\tmergedHeaders.delete(key);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tfor (const v of value) {\n\t\t\t\t\tmergedHeaders.append(key, v as string);\n\t\t\t\t}\n\t\t\t} else if (value !== undefined) {\n\t\t\t\t// assume object headers are meant to be JSON stringified, i.e. their\n\t\t\t\t// content value in OpenAPI specification is 'application/json'\n\t\t\t\tmergedHeaders.set(\n\t\t\t\t\tkey,\n\t\t\t\t\ttypeof value === \"object\" ? JSON.stringify(value) : (value as string),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\treturn mergedHeaders;\n};\n\ntype ErrInterceptor<Err, Res, Req, Options> = (\n\terror: Err,\n\tresponse: Res,\n\trequest: Req,\n\toptions: Options,\n) => Err | Promise<Err>;\n\ntype ReqInterceptor<Req, Options> = (\n\trequest: Req,\n\toptions: Options,\n) => Req | Promise<Req>;\n\ntype ResInterceptor<Res, Req, Options> = (\n\tresponse: Res,\n\trequest: Req,\n\toptions: Options,\n) => Res | Promise<Res>;\n\nclass Interceptors<Interceptor> {\n\t_fns: (Interceptor | null)[];\n\n\tconstructor() {\n\t\tthis._fns = [];\n\t}\n\n\tclear() {\n\t\tthis._fns = [];\n\t}\n\n\tgetInterceptorIndex(id: number | Interceptor): number {\n\t\tif (typeof id === \"number\") {\n\t\t\treturn this._fns[id] ? id : -1;\n\t\t} else {\n\t\t\treturn this._fns.indexOf(id);\n\t\t}\n\t}\n\texists(id: number | Interceptor) {\n\t\tconst index = this.getInterceptorIndex(id);\n\t\treturn !!this._fns[index];\n\t}\n\n\teject(id: number | Interceptor) {\n\t\tconst index = this.getInterceptorIndex(id);\n\t\tif (this._fns[index]) {\n\t\t\tthis._fns[index] = null;\n\t\t}\n\t}\n\n\tupdate(id: number | Interceptor, fn: Interceptor) {\n\t\tconst index = this.getInterceptorIndex(id);\n\t\tif (this._fns[index]) {\n\t\t\tthis._fns[index] = fn;\n\t\t\treturn id;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tuse(fn: Interceptor) {\n\t\tthis._fns = [...this._fns, fn];\n\t\treturn this._fns.length - 1;\n\t}\n}\n\n// `createInterceptors()` response, meant for external use as it does not\n// expose internals\nexport interface Middleware<Req, Res, Err, Options> {\n\terror: Pick<\n\t\tInterceptors<ErrInterceptor<Err, Res, Req, Options>>,\n\t\t\"eject\" | \"use\"\n\t>;\n\trequest: Pick<Interceptors<ReqInterceptor<Req, Options>>, \"eject\" | \"use\">;\n\tresponse: Pick<\n\t\tInterceptors<ResInterceptor<Res, Req, Options>>,\n\t\t\"eject\" | \"use\"\n\t>;\n}\n\n// do not add `Middleware` as return type so we can use _fns internally\nexport const createInterceptors = <Req, Res, Err, Options>() => ({\n\terror: new Interceptors<ErrInterceptor<Err, Res, Req, Options>>(),\n\trequest: new Interceptors<ReqInterceptor<Req, Options>>(),\n\tresponse: new Interceptors<ResInterceptor<Res, Req, Options>>(),\n});\n\nconst defaultQuerySerializer = createQuerySerializer({\n\tallowReserved: false,\n\tarray: {\n\t\texplode: true,\n\t\tstyle: \"form\",\n\t},\n\tobject: {\n\t\texplode: true,\n\t\tstyle: \"deepObject\",\n\t},\n});\n\nconst defaultHeaders = {\n\t\"Content-Type\": \"application/json\",\n};\n\nexport const createConfig = <T extends ClientOptions = ClientOptions>(\n\toverride: Config<Omit<ClientOptions, keyof T> & T> = {},\n): Config<Omit<ClientOptions, keyof T> & T> => ({\n\t...jsonBodySerializer,\n\theaders: defaultHeaders,\n\tparseAs: \"auto\",\n\tquerySerializer: defaultQuerySerializer,\n\t...override,\n});\n", "import type { Client, Config, RequestOptions } from \"./types.js\";\nimport {\n\tbuildUrl,\n\tcreateConfig,\n\tcreateInterceptors,\n\tgetParseAs,\n\tmergeConfigs,\n\tmergeHeaders,\n\tsetAuthParams,\n} from \"./utils.js\";\n\ntype ReqInit = Omit<RequestInit, \"body\" | \"headers\"> & {\n\tbody?: any;\n\theaders: ReturnType<typeof mergeHeaders>;\n};\n\nexport const createClient = (config: Config = {}): Client => {\n\tlet _config = mergeConfigs(createConfig(), config);\n\n\tconst getConfig = (): Config => ({ ..._config });\n\n\tconst setConfig = (config: Config): Config => {\n\t\t_config = mergeConfigs(_config, config);\n\t\treturn getConfig();\n\t};\n\n\tconst interceptors = createInterceptors<\n\t\tRequest,\n\t\tResponse,\n\t\tunknown,\n\t\tRequestOptions\n\t>();\n\n\tconst request: Client[\"request\"] = async (options) => {\n\t\tconst opts = {\n\t\t\t..._config,\n\t\t\t...options,\n\t\t\tfetch: options.fetch ?? _config.fetch ?? globalThis.fetch,\n\t\t\theaders: mergeHeaders(_config.headers, options.headers),\n\t\t};\n\n\t\tif (opts.security) {\n\t\t\tawait setAuthParams({\n\t\t\t\t...opts,\n\t\t\t\tsecurity: opts.security,\n\t\t\t});\n\t\t}\n\n\t\tif (opts.body && opts.bodySerializer) {\n\t\t\topts.body = opts.bodySerializer(opts.body);\n\t\t}\n\n\t\t// remove Content-Type header if body is empty to avoid sending invalid requests\n\t\tif (opts.body === undefined || opts.body === \"\") {\n\t\t\topts.headers.delete(\"Content-Type\");\n\t\t}\n\n\t\tconst url = buildUrl(opts);\n\t\tconst requestInit: ReqInit = {\n\t\t\tredirect: \"follow\",\n\t\t\t...opts,\n\t\t};\n\n\t\tlet request = new Request(url, requestInit);\n\n\t\tfor (const fn of interceptors.request._fns) {\n\t\t\tif (fn) {\n\t\t\t\trequest = await fn(request, opts);\n\t\t\t}\n\t\t}\n\n\t\t// fetch must be assigned here, otherwise it would throw the error:\n\t\t// TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\n\t\tconst _fetch = opts.fetch!;\n\t\tlet response = await _fetch(request);\n\n\t\tfor (const fn of interceptors.response._fns) {\n\t\t\tif (fn) {\n\t\t\t\tresponse = await fn(response, request, opts);\n\t\t\t}\n\t\t}\n\n\t\tconst result = {\n\t\t\trequest,\n\t\t\tresponse,\n\t\t};\n\n\t\tif (response.ok) {\n\t\t\tif (\n\t\t\t\tresponse.status === 204 ||\n\t\t\t\tresponse.headers.get(\"Content-Length\") === \"0\"\n\t\t\t) {\n\t\t\t\treturn opts.responseStyle === \"data\"\n\t\t\t\t\t? {}\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst parseAs =\n\t\t\t\t(opts.parseAs === \"auto\"\n\t\t\t\t\t? getParseAs(response.headers.get(\"Content-Type\"))\n\t\t\t\t\t: opts.parseAs) ?? \"json\";\n\n\t\t\tlet data: any;\n\t\t\tswitch (parseAs) {\n\t\t\t\tcase \"arrayBuffer\":\n\t\t\t\tcase \"blob\":\n\t\t\t\tcase \"formData\":\n\t\t\t\tcase \"json\":\n\t\t\t\tcase \"text\":\n\t\t\t\t\tdata = await response[parseAs]();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stream\":\n\t\t\t\t\treturn opts.responseStyle === \"data\"\n\t\t\t\t\t\t? response.body\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tdata: response.body,\n\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (parseAs === \"json\") {\n\t\t\t\tif (opts.responseValidator) {\n\t\t\t\t\tawait opts.responseValidator(data);\n\t\t\t\t}\n\n\t\t\t\tif (opts.responseTransformer) {\n\t\t\t\t\tdata = await opts.responseTransformer(data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn opts.responseStyle === \"data\"\n\t\t\t\t? data\n\t\t\t\t: {\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\t...result,\n\t\t\t\t\t};\n\t\t}\n\n\t\tlet error = await response.text();\n\n\t\ttry {\n\t\t\terror = JSON.parse(error);\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\n\t\tlet finalError = error;\n\n\t\tfor (const fn of interceptors.error._fns) {\n\t\t\tif (fn) {\n\t\t\t\tfinalError = (await fn(error, response, request, opts)) as string;\n\t\t\t}\n\t\t}\n\n\t\tfinalError = finalError || ({} as string);\n\n\t\tif (opts.throwOnError) {\n\t\t\tthrow finalError;\n\t\t}\n\n\t\t// TODO: we probably want to return error and improve types\n\t\treturn opts.responseStyle === \"data\"\n\t\t\t? undefined\n\t\t\t: {\n\t\t\t\t\terror: finalError,\n\t\t\t\t\t...result,\n\t\t\t\t};\n\t};\n\n\treturn {\n\t\tbuildUrl,\n\t\tconnect: (options) => request({ ...options, method: \"CONNECT\" }),\n\t\tdelete: (options) => request({ ...options, method: \"DELETE\" }),\n\t\tget: (options) => request({ ...options, method: \"GET\" }),\n\t\tgetConfig,\n\t\thead: (options) => request({ ...options, method: \"HEAD\" }),\n\t\tinterceptors,\n\t\toptions: (options) => request({ ...options, method: \"OPTIONS\" }),\n\t\tpatch: (options) => request({ ...options, method: \"PATCH\" }),\n\t\tpost: (options) => request({ ...options, method: \"POST\" }),\n\t\tput: (options) => request({ ...options, method: \"PUT\" }),\n\t\trequest,\n\t\tsetConfig,\n\t\ttrace: (options) => request({ ...options, method: \"TRACE\" }),\n\t};\n};\n", "// This file is auto-generated by @hey-api/openapi-ts\n\nimport {\n\ttype Config,\n\tcreateClient,\n\tcreateConfig,\n\ttype ClientOptions as DefaultClientOptions,\n} from \"./client/index.js\";\nimport type { ClientOptions } from \"./types.gen.js\";\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> =\n\t(\n\t\toverride?: Config<DefaultClientOptions & T>,\n\t) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>());\n", "// This file is auto-generated by @hey-api/openapi-ts\n\nimport type {\n\tClient,\n\tOptions as ClientOptions,\n\tTDataShape,\n} from \"./client/index.js\";\nimport { client as _heyApiClient } from \"./client.gen.js\";\nimport type {\n\tDeleteV1WebhooksByWebhookIdData,\n\tDeleteV1WebhooksByWebhookIdErrors,\n\tDeleteV1WebhooksByWebhookIdResponses,\n\tGetV1BlocksData,\n\tGetV1BlocksErrors,\n\tGetV1BlocksResponses,\n\tGetV1ContractsAbiByContractAddressData,\n\tGetV1ContractsAbiByContractAddressErrors,\n\tGetV1ContractsAbiByContractAddressResponses,\n\tGetV1ContractsMetadataByContractAddressData,\n\tGetV1ContractsMetadataByContractAddressErrors,\n\tGetV1ContractsMetadataByContractAddressResponses,\n\tGetV1EventsByContractAddressBySignatureData,\n\tGetV1EventsByContractAddressBySignatureErrors,\n\tGetV1EventsByContractAddressBySignatureResponses,\n\tGetV1EventsByContractAddressData,\n\tGetV1EventsByContractAddressErrors,\n\tGetV1EventsByContractAddressResponses,\n\tGetV1EventsData,\n\tGetV1EventsErrors,\n\tGetV1EventsResponses,\n\tGetV1NftsBalanceByOwnerAddressData,\n\tGetV1NftsBalanceByOwnerAddressErrors,\n\tGetV1NftsBalanceByOwnerAddressResponses,\n\tGetV1NftsByContractAddressByTokenIdData,\n\tGetV1NftsByContractAddressByTokenIdErrors,\n\tGetV1NftsByContractAddressByTokenIdResponses,\n\tGetV1NftsByContractAddressData,\n\tGetV1NftsByContractAddressErrors,\n\tGetV1NftsByContractAddressResponses,\n\tGetV1NftsCollectionsByContractAddressData,\n\tGetV1NftsCollectionsByContractAddressErrors,\n\tGetV1NftsCollectionsByContractAddressResponses,\n\tGetV1NftsData,\n\tGetV1NftsErrors,\n\tGetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n\tGetV1NftsMetadataRefreshByContractAddressByTokenIdErrors,\n\tGetV1NftsMetadataRefreshByContractAddressByTokenIdResponses,\n\tGetV1NftsMetadataRefreshByContractAddressData,\n\tGetV1NftsMetadataRefreshByContractAddressErrors,\n\tGetV1NftsMetadataRefreshByContractAddressResponses,\n\tGetV1NftsOwnersByContractAddressByTokenIdData,\n\tGetV1NftsOwnersByContractAddressByTokenIdErrors,\n\tGetV1NftsOwnersByContractAddressByTokenIdResponses,\n\tGetV1NftsOwnersByContractAddressData,\n\tGetV1NftsOwnersByContractAddressErrors,\n\tGetV1NftsOwnersByContractAddressResponses,\n\tGetV1NftsResponses,\n\tGetV1NftsTransfersByContractAddressByTokenIdData,\n\tGetV1NftsTransfersByContractAddressByTokenIdErrors,\n\tGetV1NftsTransfersByContractAddressByTokenIdResponses,\n\tGetV1NftsTransfersByContractAddressData,\n\tGetV1NftsTransfersByContractAddressErrors,\n\tGetV1NftsTransfersByContractAddressResponses,\n\tGetV1NftsTransfersData,\n\tGetV1NftsTransfersErrors,\n\tGetV1NftsTransfersResponses,\n\tGetV1NftsTransfersTransactionByTransactionHashData,\n\tGetV1NftsTransfersTransactionByTransactionHashErrors,\n\tGetV1NftsTransfersTransactionByTransactionHashResponses,\n\tGetV1ResolveByInputData,\n\tGetV1ResolveByInputErrors,\n\tGetV1ResolveByInputResponses,\n\tGetV1TokensData,\n\tGetV1TokensErc20ByOwnerAddressData,\n\tGetV1TokensErc20ByOwnerAddressErrors,\n\tGetV1TokensErc20ByOwnerAddressResponses,\n\tGetV1TokensErc721ByOwnerAddressData,\n\tGetV1TokensErc721ByOwnerAddressErrors,\n\tGetV1TokensErc721ByOwnerAddressResponses,\n\tGetV1TokensErc1155ByOwnerAddressData,\n\tGetV1TokensErc1155ByOwnerAddressErrors,\n\tGetV1TokensErc1155ByOwnerAddressResponses,\n\tGetV1TokensErrors,\n\tGetV1TokensLookupData,\n\tGetV1TokensLookupErrors,\n\tGetV1TokensLookupResponses,\n\tGetV1TokensOwnersData,\n\tGetV1TokensOwnersErrors,\n\tGetV1TokensOwnersResponses,\n\tGetV1TokensPriceData,\n\tGetV1TokensPriceErrors,\n\tGetV1TokensPriceResponses,\n\tGetV1TokensPriceSupportedData,\n\tGetV1TokensPriceSupportedErrors,\n\tGetV1TokensPriceSupportedResponses,\n\tGetV1TokensResponses,\n\tGetV1TokensTransfersByContractAddressData,\n\tGetV1TokensTransfersByContractAddressErrors,\n\tGetV1TokensTransfersByContractAddressResponses,\n\tGetV1TokensTransfersData,\n\tGetV1TokensTransfersErrors,\n\tGetV1TokensTransfersResponses,\n\tGetV1TokensTransfersTransactionByTransactionHashData,\n\tGetV1TokensTransfersTransactionByTransactionHashErrors,\n\tGetV1TokensTransfersTransactionByTransactionHashResponses,\n\tGetV1TransactionsByContractAddressBySignatureData,\n\tGetV1TransactionsByContractAddressBySignatureErrors,\n\tGetV1TransactionsByContractAddressBySignatureResponses,\n\tGetV1TransactionsByContractAddressData,\n\tGetV1TransactionsByContractAddressErrors,\n\tGetV1TransactionsByContractAddressResponses,\n\tGetV1TransactionsData,\n\tGetV1TransactionsErrors,\n\tGetV1TransactionsResponses,\n\tGetV1WalletsByWalletAddressTransactionsData,\n\tGetV1WalletsByWalletAddressTransactionsErrors,\n\tGetV1WalletsByWalletAddressTransactionsResponses,\n\tGetV1WebhooksData,\n\tGetV1WebhooksErrors,\n\tGetV1WebhooksResponses,\n\tPatchV1WebhooksByWebhookIdData,\n\tPatchV1WebhooksByWebhookIdErrors,\n\tPatchV1WebhooksByWebhookIdResponses,\n\tPostServiceWebhooksFiltersValidateData,\n\tPostServiceWebhooksFiltersValidateErrors,\n\tPostServiceWebhooksFiltersValidateResponses,\n\tPostV1DecodeByContractAddressData,\n\tPostV1DecodeByContractAddressErrors,\n\tPostV1DecodeByContractAddressResponses,\n\tPostV1WebhooksData,\n\tPostV1WebhooksErrors,\n\tPostV1WebhooksResponses,\n\tPostV1WebhooksTestData,\n\tPostV1WebhooksTestErrors,\n\tPostV1WebhooksTestResponses,\n} from \"./types.gen.js\";\n\nexport type Options<\n\tTData extends TDataShape = TDataShape,\n\tThrowOnError extends boolean = boolean,\n> = ClientOptions<TData, ThrowOnError> & {\n\t/**\n\t * You can provide a client instance returned by `createClient()` instead of\n\t * individual options. This might be also useful if you want to implement a\n\t * custom client.\n\t */\n\tclient?: Client;\n\t/**\n\t * You can pass arbitrary values through the `meta` object. This can be\n\t * used to access values that aren't defined as part of the SDK function.\n\t */\n\tmeta?: Record<string, unknown>;\n};\n\n/**\n * Get webhooks\n * Get a list of webhooks or a single webhook by ID\n * @deprecated\n */\nexport const getV1Webhooks = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1WebhooksData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1WebhooksResponses,\n\t\tGetV1WebhooksErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-secret-key\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/webhooks\",\n\t\t...options,\n\t});\n};\n\n/**\n * Create webhook\n * Deprecated - Insight webhooks will remain active for a while, but new ones cannot be created. A general thirdweb webhook solution will be available instead. Create a new webhook. In order to receive decoded data, specify a partial ABI in the filters.\n * @deprecated\n */\nexport const postV1Webhooks = <ThrowOnError extends boolean = false>(\n\toptions?: Options<PostV1WebhooksData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).post<\n\t\tPostV1WebhooksResponses,\n\t\tPostV1WebhooksErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-secret-key\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/webhooks\",\n\t\t...options,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...options?.headers,\n\t\t},\n\t});\n};\n\n/**\n * Delete webhook\n * Delete a webhook. This action cannot be undone.\n * @deprecated\n */\nexport const deleteV1WebhooksByWebhookId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<DeleteV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).delete<\n\t\tDeleteV1WebhooksByWebhookIdResponses,\n\t\tDeleteV1WebhooksByWebhookIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-secret-key\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/webhooks/{webhook_id}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Update webhook\n * Update a webhook.\n * @deprecated\n */\nexport const patchV1WebhooksByWebhookId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<PatchV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).patch<\n\t\tPatchV1WebhooksByWebhookIdResponses,\n\t\tPatchV1WebhooksByWebhookIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-secret-key\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/webhooks/{webhook_id}\",\n\t\t...options,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...options.headers,\n\t\t},\n\t});\n};\n\n/**\n * Test webhook\n * Test your webhook URL. This will send a test event to the webhook URL signed with an example secret 'test123'. NB! The payload does not necessarily match your webhook filters. You can however use it to test signature verification and payload format handling.\n * @deprecated\n */\nexport const postV1WebhooksTest = <ThrowOnError extends boolean = false>(\n\toptions?: Options<PostV1WebhooksTestData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).post<\n\t\tPostV1WebhooksTestResponses,\n\t\tPostV1WebhooksTestErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-secret-key\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/webhooks/test\",\n\t\t...options,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...options?.headers,\n\t\t},\n\t});\n};\n\n/**\n * Get events\n * Get events\n */\nexport const getV1Events = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1EventsData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1EventsResponses,\n\t\tGetV1EventsErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/events\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract events\n * Get contract events\n */\nexport const getV1EventsByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1EventsByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1EventsByContractAddressResponses,\n\t\tGetV1EventsByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/events/{contractAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract events with specific signature\n * Get specific contract events\n */\nexport const getV1EventsByContractAddressBySignature = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1EventsByContractAddressBySignatureData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1EventsByContractAddressBySignatureResponses,\n\t\tGetV1EventsByContractAddressBySignatureErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/events/{contractAddress}/{signature}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get transactions\n * Get transactions\n */\nexport const getV1Transactions = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1TransactionsData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1TransactionsResponses,\n\t\tGetV1TransactionsErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/transactions\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract transactions\n * Get contract transactions\n */\nexport const getV1TransactionsByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1TransactionsByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TransactionsByContractAddressResponses,\n\t\tGetV1TransactionsByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/transactions/{contractAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract transactions with specific signature\n * Get specific contract transactions\n */\nexport const getV1TransactionsByContractAddressBySignature = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<\n\t\tGetV1TransactionsByContractAddressBySignatureData,\n\t\tThrowOnError\n\t>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TransactionsByContractAddressBySignatureResponses,\n\t\tGetV1TransactionsByContractAddressBySignatureErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/transactions/{contractAddress}/{signature}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get token owners by contract\n * Get token owners for specific contract\n */\nexport const getV1TokensOwners = <ThrowOnError extends boolean = false>(\n\toptions: Options<GetV1TokensOwnersData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensOwnersResponses,\n\t\tGetV1TokensOwnersErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/owners\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get token transfers by transaction\n * Get token transfers by transaction\n */\nexport const getV1TokensTransfersTransactionByTransactionHash = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<\n\t\tGetV1TokensTransfersTransactionByTransactionHashData,\n\t\tThrowOnError\n\t>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensTransfersTransactionByTransactionHashResponses,\n\t\tGetV1TokensTransfersTransactionByTransactionHashErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/transfers/transaction/{transaction_hash}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get token transfers by contract\n * Get token transfers by contract\n */\nexport const getV1TokensTransfersByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1TokensTransfersByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensTransfersByContractAddressResponses,\n\t\tGetV1TokensTransfersByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/transfers/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get token transfers\n * Get token transfers\n */\nexport const getV1TokensTransfers = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1TokensTransfersData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1TokensTransfersResponses,\n\t\tGetV1TokensTransfersErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/transfers\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get ERC-20 balances by address\n * Get ERC-20 balances for a given address. [BEING DEPRECATED IN FAVOR OF /tokens]\n * @deprecated\n */\nexport const getV1TokensErc20ByOwnerAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1TokensErc20ByOwnerAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensErc20ByOwnerAddressResponses,\n\t\tGetV1TokensErc20ByOwnerAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/erc20/{ownerAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get tokens\n * Query tokens\n */\nexport const getV1Tokens = <ThrowOnError extends boolean = false>(\n\toptions: Options<GetV1TokensData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensResponses,\n\t\tGetV1TokensErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get ERC-721 balances by address\n * Get ERC-721 (NFT) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nexport const getV1TokensErc721ByOwnerAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1TokensErc721ByOwnerAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensErc721ByOwnerAddressResponses,\n\t\tGetV1TokensErc721ByOwnerAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/erc721/{ownerAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get ERC-1155 balances by address\n * Get ERC-1155 (Multi Token) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nexport const getV1TokensErc1155ByOwnerAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1TokensErc1155ByOwnerAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensErc1155ByOwnerAddressResponses,\n\t\tGetV1TokensErc1155ByOwnerAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/erc1155/{ownerAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get supported tokens for price data\n * Get supported tokens for price data\n */\nexport const getV1TokensPriceSupported = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1TokensPriceSupportedData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1TokensPriceSupportedResponses,\n\t\tGetV1TokensPriceSupportedErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/price/supported\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get token price\n * Get price in USD for given token(s)\n */\nexport const getV1TokensPrice = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1TokensPriceData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1TokensPriceResponses,\n\t\tGetV1TokensPriceErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/price\",\n\t\t...options,\n\t});\n};\n\n/**\n * Token lookup\n * Look up a fungible token by symbol\n */\nexport const getV1TokensLookup = <ThrowOnError extends boolean = false>(\n\toptions: Options<GetV1TokensLookupData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1TokensLookupResponses,\n\t\tGetV1TokensLookupErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/tokens/lookup\",\n\t\t...options,\n\t});\n};\n\n/**\n * Resolve\n * Resolve\n */\nexport const getV1ResolveByInput = <ThrowOnError extends boolean = false>(\n\toptions: Options<GetV1ResolveByInputData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1ResolveByInputResponses,\n\t\tGetV1ResolveByInputErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/resolve/{input}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get blocks\n * Get blocks\n */\nexport const getV1Blocks = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1BlocksData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1BlocksResponses,\n\t\tGetV1BlocksErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/blocks\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract ABIâ€‹\n * Get contract ABIâ€‹\n */\nexport const getV1ContractsAbiByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1ContractsAbiByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1ContractsAbiByContractAddressResponses,\n\t\tGetV1ContractsAbiByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/contracts/abi/{contractAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get contract metadataâ€‹\n * Get contract metadataâ€‹\n */\nexport const getV1ContractsMetadataByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1ContractsMetadataByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1ContractsMetadataByContractAddressResponses,\n\t\tGetV1ContractsMetadataByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/contracts/metadata/{contractAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Decode logs and transactionsâ€‹\n * Decode logs and transactionsâ€‹\n */\nexport const postV1DecodeByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<PostV1DecodeByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).post<\n\t\tPostV1DecodeByContractAddressResponses,\n\t\tPostV1DecodeByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/decode/{contractAddress}\",\n\t\t...options,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...options.headers,\n\t\t},\n\t});\n};\n\n/**\n * Get NFT balances by address\n * Get NFT balances for a given address\n */\nexport const getV1NftsBalanceByOwnerAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsBalanceByOwnerAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsBalanceByOwnerAddressResponses,\n\t\tGetV1NftsBalanceByOwnerAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/balance/{ownerAddress}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get collection\n * Retrieve metadata about a collection\n */\nexport const getV1NftsCollectionsByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsCollectionsByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsCollectionsByContractAddressResponses,\n\t\tGetV1NftsCollectionsByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/collections/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFTs\n * Get NFTs\n */\nexport const getV1Nfts = <ThrowOnError extends boolean = false>(\n\toptions: Options<GetV1NftsData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsResponses,\n\t\tGetV1NftsErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT owners by contract\n * Get NFT owners by contract\n */\nexport const getV1NftsOwnersByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsOwnersByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsOwnersByContractAddressResponses,\n\t\tGetV1NftsOwnersByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/owners/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT owners by token\n * Get NFT owners by token\n */\nexport const getV1NftsOwnersByContractAddressByTokenId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsOwnersByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsOwnersByContractAddressByTokenIdResponses,\n\t\tGetV1NftsOwnersByContractAddressByTokenIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/owners/{contract_address}/{token_id}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT transfers\n * Get NFT transfers\n */\nexport const getV1NftsTransfers = <ThrowOnError extends boolean = false>(\n\toptions?: Options<GetV1NftsTransfersData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).get<\n\t\tGetV1NftsTransfersResponses,\n\t\tGetV1NftsTransfersErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/transfers\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT transfers by transaction\n * Get NFT transfers by transaction\n */\nexport const getV1NftsTransfersTransactionByTransactionHash = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<\n\t\tGetV1NftsTransfersTransactionByTransactionHashData,\n\t\tThrowOnError\n\t>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsTransfersTransactionByTransactionHashResponses,\n\t\tGetV1NftsTransfersTransactionByTransactionHashErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/transfers/transaction/{transaction_hash}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT transfers by contract\n * Get NFT transfers by contract\n */\nexport const getV1NftsTransfersByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsTransfersByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsTransfersByContractAddressResponses,\n\t\tGetV1NftsTransfersByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/transfers/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFTs by contract\n * Get NFTs by contract\n */\nexport const getV1NftsByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsByContractAddressResponses,\n\t\tGetV1NftsByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT transfers by token\n * Get NFT transfers by token\n */\nexport const getV1NftsTransfersByContractAddressByTokenId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<\n\t\tGetV1NftsTransfersByContractAddressByTokenIdData,\n\t\tThrowOnError\n\t>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsTransfersByContractAddressByTokenIdResponses,\n\t\tGetV1NftsTransfersByContractAddressByTokenIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/transfers/{contract_address}/{token_id}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get NFT by token ID\n * Get NFT by token ID\n */\nexport const getV1NftsByContractAddressByTokenId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsByContractAddressByTokenIdResponses,\n\t\tGetV1NftsByContractAddressByTokenIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/{contract_address}/{token_id}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Force refresh collection metadata\n * Force refresh collection metadata for the specified contract (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddress = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1NftsMetadataRefreshByContractAddressData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsMetadataRefreshByContractAddressResponses,\n\t\tGetV1NftsMetadataRefreshByContractAddressErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/metadata/refresh/{contract_address}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Force refresh token metadata\n * Force refresh token metadata for the specified contract and token ID (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddressByTokenId = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<\n\t\tGetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n\t\tThrowOnError\n\t>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1NftsMetadataRefreshByContractAddressByTokenIdResponses,\n\t\tGetV1NftsMetadataRefreshByContractAddressByTokenIdErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/nfts/metadata/refresh/{contract_address}/{token_id}\",\n\t\t...options,\n\t});\n};\n\n/**\n * Get wallet transactions\n * Get incoming and outgoing transactions for a wallet\n */\nexport const getV1WalletsByWalletAddressTransactions = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions: Options<GetV1WalletsByWalletAddressTransactionsData, ThrowOnError>,\n) => {\n\treturn (options.client ?? _heyApiClient).get<\n\t\tGetV1WalletsByWalletAddressTransactionsResponses,\n\t\tGetV1WalletsByWalletAddressTransactionsErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/v1/wallets/{wallet_address}/transactions\",\n\t\t...options,\n\t});\n};\n\n/**\n * Validate webhook filters\n * Webhook filters are complex and unique to Insight. Since webhooks are not created through this service anymore, this functionality to validate them is now exposed through this endpoint.\n */\nexport const postServiceWebhooksFiltersValidate = <\n\tThrowOnError extends boolean = false,\n>(\n\toptions?: Options<PostServiceWebhooksFiltersValidateData, ThrowOnError>,\n) => {\n\treturn (options?.client ?? _heyApiClient).post<\n\t\tPostServiceWebhooksFiltersValidateResponses,\n\t\tPostServiceWebhooksFiltersValidateErrors,\n\t\tThrowOnError\n\t>({\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tname: \"x-client-id\",\n\t\t\t\ttype: \"apiKey\",\n\t\t\t},\n\t\t],\n\t\turl: \"/service/webhooks/filters/validate\",\n\t\t...options,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t...options?.headers,\n\t\t},\n\t});\n};\n", "import type { Config } from \"./client/client/index.js\";\nimport { client } from \"./client/client.gen.js\";\n\nexport type InsightClientOptions = {\n\treadonly clientId?: string;\n\treadonly secretKey?: string;\n};\n\nexport function configure(\n\toptions: InsightClientOptions & { override?: Config },\n) {\n\tclient.setConfig({\n\t\theaders: {\n\t\t\t...(options.clientId && { \"x-client-id\": options.clientId }),\n\t\t\t...(options.secretKey && { \"x-secret-key\": options.secretKey }),\n\t\t},\n\t\t...(options.override ?? {}),\n\t});\n}\n"],
  "mappings": "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",
  "names": ["joinedValues", "config", "request"]
}
