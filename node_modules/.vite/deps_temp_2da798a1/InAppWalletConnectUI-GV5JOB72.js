"use client";
import {
  GuestLogin,
  OTPLoginUI,
  PassKeyLogin,
  PoweredByThirdweb,
  SocialLogin,
  TOS,
  WalletAuth
} from "./chunk-HQQTCP4D.js";
import "./chunk-T3QUHWMB.js";
import "./chunk-G4EXVHWQ.js";
import {
  ConnectWalletSocialOptions,
  LoadingScreen,
  useInAppWalletLocale,
  useScreenContext
} from "./chunk-OW4CJEAJ.js";
import {
  useSelectionData,
  useSetSelectionData
} from "./chunk-XC64MVAP.js";
import "./chunk-6XQWDQBL.js";
import {
  Container,
  Img,
  ModalHeader,
  ModalTitle,
  Spacer,
  iconSize
} from "./chunk-Z4M6ZVPO.js";
import "./chunk-UWS62EZ6.js";
import "./chunk-GJTYI73B.js";
import "./chunk-4N45FRWS.js";
import "./chunk-DE3EJMJP.js";
import "./chunk-6O4VH2IN.js";
import "./chunk-RJ7GRFF3.js";
import "./chunk-6NKK53WR.js";
import "./chunk-O4IML4YE.js";
import "./chunk-NOQHPE4Q.js";
import "./chunk-N5GRE3NC.js";
import "./chunk-5GPJCQB3.js";
import "./chunk-LWBFBP2R.js";
import "./chunk-22D2ZAQ3.js";
import "./chunk-QDEEV5NE.js";
import "./chunk-I5UI2NGW.js";
import "./chunk-FUW7UPWG.js";
import "./chunk-PAAPSL3C.js";
import "./chunk-YTVGBUSR.js";
import {
  require_jsx_runtime
} from "./chunk-LYPMD674.js";
import {
  require_react
} from "./chunk-2ZCBPYXF.js";
import "./chunk-RFFTPTNE.js";
import "./chunk-YBIOJZBF.js";
import "./chunk-IZKCGR2B.js";
import "./chunk-424DSV6F.js";
import "./chunk-KJIOWHTG.js";
import "./chunk-HLJODQME.js";
import "./chunk-5R7S7VX2.js";
import "./chunk-OIIGC4IN.js";
import "./chunk-MKB46BXW.js";
import "./chunk-OWPJAJVA.js";
import "./chunk-JLUGDFAM.js";
import "./chunk-43F4DZXD.js";
import "./chunk-YCZ3YGMG.js";
import "./chunk-DGWZEIL6.js";
import "./chunk-PF7J76SD.js";
import "./chunk-GYLVPM2U.js";
import "./chunk-Q7I3EUQG.js";
import "./chunk-WZWH6DQ2.js";
import "./chunk-QP4NW4MI.js";
import "./chunk-7OH7LVST.js";
import "./chunk-L4NN5UUQ.js";
import "./chunk-HAADYJEF.js";
import "./chunk-ALXM2V2D.js";
import "./chunk-JTQFPYF6.js";
import "./chunk-EAI6ZE6R.js";
import "./chunk-SJUTDOTM.js";
import "./chunk-7ZAXHZVK.js";
import "./chunk-2OMZKD5Y.js";
import "./chunk-UG6X6BL6.js";
import "./chunk-4HC36SBT.js";
import "./chunk-HXWRQBIO.js";
import "./chunk-FLUAB4EX.js";
import "./chunk-B5MBRYI6.js";
import "./chunk-KWGI5LSL.js";
import "./chunk-6JZ5SMSC.js";
import "./chunk-AMOBGZPQ.js";
import "./chunk-Q7YW2IAU.js";
import "./chunk-XEGDYWOA.js";
import "./chunk-2CIJO3V3.js";
import "./chunk-D2TAUU6E.js";
import "./chunk-SPUJ3V7I.js";
import "./chunk-G24WGTAU.js";
import "./chunk-3HQSRVBD.js";
import "./chunk-3OXDSLPJ.js";
import "./chunk-PPP72TBL.js";
import "./chunk-HARK4W7T.js";
import {
  __toESM
} from "./chunk-5JRVV4XU.js";

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletFormUI.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react = __toESM(require_react(), 1);
function InAppWalletFormUIScreen(props) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  const isCompact = props.size === "compact";
  const { initialScreen, screen } = useScreenContext();
  const [isApproved, setIsApproved] = (0, import_react.useState)(false);
  const isInitialScreen = screen === props.wallet && initialScreen === props.wallet;
  const onBack = isInitialScreen && !props.isLinking ? void 0 : props.goBack;
  return (0, import_jsx_runtime.jsxs)(Container, { animate: "fadein", flex: "column", fullHeight: true, p: "lg", style: {
    minHeight: "250px"
  }, children: [isCompact && (isInitialScreen ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [(0, import_jsx_runtime.jsx)(ModalHeader, { leftAligned: !props.isLinking, onBack, title: (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [!((_a = props.meta) == null ? void 0 : _a.titleIconUrl) ? null : (0, import_jsx_runtime.jsx)(Img, { client: props.client, height: iconSize.md, src: (_b = props.meta) == null ? void 0 : _b.titleIconUrl, width: iconSize.md }), (0, import_jsx_runtime.jsx)(ModalTitle, { children: ((_c = props.meta) == null ? void 0 : _c.title) ?? props.inAppWalletLocale.emailLoginScreen.title })] }) }), (0, import_jsx_runtime.jsx)(Spacer, { y: "lg" })] }) : (0, import_jsx_runtime.jsx)(ModalHeader, { onBack, title: props.inAppWalletLocale.signIn })), (0, import_jsx_runtime.jsx)(Container, { center: "y", expand: true, flex: "column", p: isCompact ? void 0 : "lg", children: (0, import_jsx_runtime.jsx)(ConnectWalletSocialOptions, { ...props, disabled: ((_d = props.meta) == null ? void 0 : _d.requireApproval) && !isApproved, locale: props.inAppWalletLocale }) }), isCompact && (((_e = props.meta) == null ? void 0 : _e.showThirdwebBranding) !== false || ((_f = props.meta) == null ? void 0 : _f.termsOfServiceUrl) || ((_g = props.meta) == null ? void 0 : _g.privacyPolicyUrl)) && (0, import_jsx_runtime.jsx)(Spacer, { y: "xl" }), (0, import_jsx_runtime.jsxs)(Container, { flex: "column", gap: "lg", children: [(0, import_jsx_runtime.jsx)(TOS, { isApproved, locale: props.connectLocale.agreement, onApprove: () => {
    setIsApproved(!isApproved);
  }, privacyPolicyUrl: (_h = props.meta) == null ? void 0 : _h.privacyPolicyUrl, requireApproval: (_i = props.meta) == null ? void 0 : _i.requireApproval, termsOfServiceUrl: (_j = props.meta) == null ? void 0 : _j.termsOfServiceUrl }), ((_k = props.meta) == null ? void 0 : _k.showThirdwebBranding) !== false && (0, import_jsx_runtime.jsx)(PoweredByThirdweb, {})] })] });
}

// node_modules/thirdweb/dist/esm/react/web/wallets/in-app/InAppWalletConnectUI.js
function InAppWalletConnectUI(props) {
  const data = useSelectionData();
  const setSelectionData = useSetSelectionData();
  const state = data;
  const localeId = props.connectLocale.id;
  const locale = useInAppWalletLocale(localeId);
  const { initialScreen } = useScreenContext();
  if (!locale) {
    return (0, import_jsx_runtime2.jsx)(LoadingScreen, {});
  }
  const goBackToMain = () => {
    var _a;
    if (initialScreen === props.wallet) {
      setSelectionData({});
    } else {
      (_a = props.goBack) == null ? void 0 : _a.call(props);
      setSelectionData({});
    }
  };
  const done = () => {
    props.done();
    setSelectionData({});
  };
  const otpUserInfo = (state == null ? void 0 : state.emailLogin) ? { email: state.emailLogin } : (state == null ? void 0 : state.phoneLogin) ? { phone: state.phoneLogin } : void 0;
  if (otpUserInfo) {
    return (0, import_jsx_runtime2.jsx)(OTPLoginUI, { chain: props.chain, client: props.client, done, goBack: goBackToMain, isLinking: props.isLinking, locale, size: props.size, userInfo: otpUserInfo, wallet: props.wallet });
  }
  if (state == null ? void 0 : state.passkeyLogin) {
    return (0, import_jsx_runtime2.jsx)(PassKeyLogin, { chain: props.chain, client: props.client, done, isLinking: props.isLinking, locale: props.connectLocale, onBack: goBackToMain, size: props.size, wallet: props.wallet });
  }
  if (state == null ? void 0 : state.walletLogin) {
    return (0, import_jsx_runtime2.jsx)(WalletAuth, { chain: props.chain, client: props.client, done, inAppLocale: locale, isLinking: state.walletLogin.linking, locale: props.connectLocale, meta: props.meta, onBack: goBackToMain || (() => setSelectionData({})), size: props.size, wallet: props.wallet, walletConnect: props.walletConnect });
  }
  if (state == null ? void 0 : state.socialLogin) {
    return (0, import_jsx_runtime2.jsx)(SocialLogin, { chain: props.chain, client: props.client, connectLocale: props.connectLocale, done, goBack: goBackToMain, isLinking: props.isLinking, locale, size: props.size, socialAuth: state.socialLogin.type, state, wallet: props.wallet });
  }
  if (state == null ? void 0 : state.guestLogin) {
    return (0, import_jsx_runtime2.jsx)(GuestLogin, { client: props.client, connectLocale: props.connectLocale, done, goBack: goBackToMain, locale, size: props.size, state, wallet: props.wallet });
  }
  return (0, import_jsx_runtime2.jsx)(InAppWalletFormUIScreen, { chain: props.chain, client: props.client, connectLocale: props.connectLocale, done, goBack: props.goBack, inAppWalletLocale: locale, isLinking: props.isLinking, meta: props.meta, select: () => {
  }, size: props.size, wallet: props.wallet });
}
var InAppWalletConnectUI_default = InAppWalletConnectUI;
export {
  InAppWalletConnectUI_default as default
};
//# sourceMappingURL=InAppWalletConnectUI-GV5JOB72.js.map
