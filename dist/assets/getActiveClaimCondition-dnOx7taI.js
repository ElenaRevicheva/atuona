import{a6 as n}from"./main-C_x9syUL.js";const a="0xc68907de",o=[],i=[{type:"uint256"}];async function c(t){return n({contract:t.contract,method:[a,o,i],params:[]})}const r="0x6f8934f4",m=[{name:"_conditionId",type:"uint256"}],d=[{components:[{name:"startTimestamp",type:"uint256"},{name:"maxClaimableSupply",type:"uint256"},{name:"supplyClaimed",type:"uint256"},{name:"quantityLimitPerWallet",type:"uint256"},{name:"merkleRoot",type:"bytes32"},{name:"pricePerToken",type:"uint256"},{name:"currency",type:"address"},{name:"metadata",type:"string"}],name:"condition",type:"tuple"}];async function p(t){return n({contract:t.contract,method:[r,m,d],params:[t.conditionId]})}async function s(t){try{const e=await c(t);return p({...t,conditionId:e})}catch{throw new Error("Claim condition not found")}}export{s as getActiveClaimCondition};
