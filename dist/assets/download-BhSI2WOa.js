import{_ as g,j as w}from"./main-BPX88kkk.js";const p="https://{clientId}.ipfscdn.io/ipfs/{cid}";function m(e){var t,i;if(e.uri.startsWith("ipfs://")){const a=((i=(t=e.client.config)==null?void 0:t.storage)==null?void 0:i.gatewayUrl)??p,s=e.client.clientId,c=I(e.uri);let r;return typeof globalThis<"u"&&"Application"in globalThis&&(r=globalThis.Application.applicationId),`${a.replace("{clientId}",s).split("/ipfs")[0]}/ipfs/${c}${r?`?bundleId=${r}`:""}`}if(e.uri.startsWith("http"))return e.uri;throw new Error('Invalid URI scheme, expected "ipfs://" or "http(s)://"')}function I(e){if(!e.startsWith("ipfs://"))return e;const t=e.search(/\/(Qm|baf)/i);return e.slice(t+1)}async function T(e){var a,s,c,r,l,f,o,d,u;let t;if(e.uri.startsWith("ar://")){const{resolveArweaveScheme:n}=await g(async()=>{const{resolveArweaveScheme:h}=await import("./arweave-CAGvOb64.js");return{resolveArweaveScheme:h}},[]);t=n(e)}else t=m(e);const i=await w(e.client)(t,{headers:(c=(s=(a=e.client.config)==null?void 0:a.storage)==null?void 0:s.fetch)==null?void 0:c.headers,keepalive:(f=(l=(r=e.client.config)==null?void 0:r.storage)==null?void 0:l.fetch)==null?void 0:f.keepalive,requestTimeoutMs:e.requestTimeoutMs??((u=(d=(o=e.client.config)==null?void 0:o.storage)==null?void 0:d.fetch)==null?void 0:u.requestTimeoutMs)??6e4});if(!i.ok){const n=await i.text();throw new Error(`Failed to download file: ${i.status} ${i.statusText} ${n||""}`)}return i}export{T as download};
