const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/in-app-wallet-calls-8CHru4I0.js","assets/wait-for-tx-receipt-DLk9DQm9.js","assets/main-C3cAwJ4P.js","assets/to-serializable-transaction-D1kWDxIa.js","assets/sleep-mAKpSMLY.js","assets/send-transaction-C2scQNVZ.js","assets/random-BbuTDDLX.js","assets/eth_getTransactionCount-B1qrS8dO.js","assets/index-7N5QjdwW.js","assets/read-contract-EJw7wARq.js","assets/addresses-Cbjra2SQ.js","assets/send-eip712-transaction-DFw9ifj4.js","assets/eth_sendRawTransaction-DPdnXbFR.js","assets/concat-hex-BXzZOBzH.js","assets/bundler-CcodSeAe.js"])))=>i.map(i=>d[i]);
import{aY as C,H as x,I as A,_ as d,b as m,U as I,h as S,aZ as P,z as E}from"./main-C3cAwJ4P.js";import{s as M}from"./types-CY5aNEio.js";import{b as _}from"./to-serializable-transaction-D1kWDxIa.js";import{r as U}from"./random-BbuTDDLX.js";import{i as V,j as W}from"./bundler-CcodSeAe.js";const R=C({blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}],id:1,name:"Ethereum",nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"}}),D="0x3f707e6b",F=[{components:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],name:"calls",type:"tuple[]"}],N=[];function z(n){const t=A(async()=>"asyncParams"in n?await n.asyncParams():n);return x({accessList:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.accessList},authorizationList:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.authorizationList},contract:n.contract,erc20Value:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.erc20Value},extraGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.extraGas},gas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.gas},gasPrice:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.gasPrice},maxFeePerGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.maxFeePerGas},maxPriorityFeePerGas:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.maxPriorityFeePerGas},method:[D,F,N],nonce:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.nonce},params:async()=>[(await t()).calls],value:async()=>{var e;return(e=(await t()).overrides)==null?void 0:e.value}})}const f="0xD6999651Fc0964B9c6B444307a0ab20534a66560",G=n=>{const{client:t,adminAccount:e,sponsorGas:s}=n,p=async a=>{var g;const i=a[0];if(!i)throw new Error("No transactions provided");const r=m(i.chainId),u=I({address:e.address,chain:r,client:t,abi:$});let o;if(!await B(u)){let l=i.nonce?BigInt(i.nonce):BigInt(await H({client:t,address:e.address,chain:m(i.chainId)}));l+=s?0n:1n;const c=await((g=e.signAuthorization)==null?void 0:g.call(e,{address:f,chainId:i.chainId,nonce:l}));if(!c)throw new Error("Failed to sign authorization");o=c}if(s){const l={calls:a.map(b=>({data:b.data??"0x",target:S(b.to??""),value:b.value??0n})),uid:U()},c=await e.signTypedData({domain:{chainId:i.chainId,name:"MinimalAccount",verifyingContract:u.address,version:"1"},message:l,primaryType:"WrappedCalls",types:{Call:[{name:"target",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"}],WrappedCalls:[{name:"calls",type:"Call[]"},{name:"uid",type:"bytes32"}]}}),v=await V({authorization:o,eoaAddress:S(e.address),options:{chain:m(i.chainId),client:t},signature:c,wrappedCalls:l});return{transactionHash:await k({options:{chain:m(i.chainId),client:t},transactionId:v.transactionId})}}const T=z({calls:a.map(l=>({data:l.data??"0x",target:l.to??"",value:l.value??0n})),contract:u,overrides:{authorizationList:o?[o]:void 0,value:a.reduce((l,c)=>l+(c.value??0n),0n)}}),w=await _({from:e.address,transaction:T});return e.sendTransaction(w)},y={address:e.address,sendBatchTransaction:async a=>p(a),sendTransaction:async a=>p([a]),signMessage:({message:a,originalMessage:i,chainId:r})=>e.signMessage({chainId:r,message:a,originalMessage:i}),signTypedData:a=>e.signTypedData(a),sendCalls:async a=>{const{inAppWalletSendCalls:i}=await d(async()=>{const{inAppWalletSendCalls:T}=await import("./in-app-wallet-calls-8CHru4I0.js");return{inAppWalletSendCalls:T}},__vite__mapDeps([0,1,2,3,4,5,6])),r=a.calls[0];if(!r)throw new Error("No calls to send");const u=r.client,o=r.chain||a.chain,h=await i({account:y,calls:a.calls});return{chain:o,client:u,id:h}},getCallsStatus:async a=>{const{inAppWalletGetCallsStatus:i}=await d(async()=>{const{inAppWalletGetCallsStatus:r}=await import("./in-app-wallet-calls-8CHru4I0.js");return{inAppWalletGetCallsStatus:r}},__vite__mapDeps([0,1,2,3,4,5,6]));return i(a)},getCapabilities:async a=>({[a.chainId??1]:{atomic:{status:"supported"},paymasterService:{supported:s??!1}}})};return y};async function H(n){const{client:t,address:e,chain:s}=n,p=E({chain:s,client:t});return await d(async()=>{const{eth_getTransactionCount:a}=await import("./eth_getTransactionCount-B1qrS8dO.js");return{eth_getTransactionCount:a}},__vite__mapDeps([7,2])).then(({eth_getTransactionCount:a})=>a(p,{address:e,blockTag:"pending"}))}async function B(n){const t=await P(n),e=t.length>0&&t.startsWith("0xef0100"),s=`0x${t.slice(8,48)}`;return e&&s.toLowerCase()===f.toLowerCase()}async function k(n){const t=n.timeoutMs||3e5,e=n.intervalMs||1e3,s=Date.now()+t;for(;Date.now()<s;){const p=await W({options:n.options,transactionId:n.transactionId});if(p.transactionHash)return p.transactionHash;await new Promise(y=>setTimeout(y,e))}throw new Error(`Timeout waiting for transaction to be mined on chain ${n.options.chain.id} with transactionId: ${n.transactionId}`)}const $=[{type:"receive",stateMutability:"payable"},{type:"function",name:"createSessionWithSig",inputs:[{name:"sessionSpec",type:"tuple",internalType:"struct SessionLib.SessionSpec",components:[{name:"signer",type:"address",internalType:"address"},{name:"isWildcard",type:"bool",internalType:"bool"},{name:"expiresAt",type:"uint256",internalType:"uint256"},{name:"callPolicies",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]},{name:"transferPolicies",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]},{name:"signature",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"nonpayable"},{type:"function",name:"eip712Domain",inputs:[],outputs:[{name:"fields",type:"bytes1",internalType:"bytes1"},{name:"name",type:"string",internalType:"string"},{name:"version",type:"string",internalType:"string"},{name:"chainId",type:"uint256",internalType:"uint256"},{name:"verifyingContract",type:"address",internalType:"address"},{name:"salt",type:"bytes32",internalType:"bytes32"},{name:"extensions",type:"uint256[]",internalType:"uint256[]"}],stateMutability:"view"},{type:"function",name:"execute",inputs:[{name:"calls",type:"tuple[]",internalType:"struct Call[]",components:[{name:"target",type:"address",internalType:"address"},{name:"value",type:"uint256",internalType:"uint256"},{name:"data",type:"bytes",internalType:"bytes"}]}],outputs:[],stateMutability:"payable"},{type:"function",name:"executeWithSig",inputs:[{name:"wrappedCalls",type:"tuple",internalType:"struct WrappedCalls",components:[{name:"calls",type:"tuple[]",internalType:"struct Call[]",components:[{name:"target",type:"address",internalType:"address"},{name:"value",type:"uint256",internalType:"uint256"},{name:"data",type:"bytes",internalType:"bytes"}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]},{name:"signature",type:"bytes",internalType:"bytes"}],outputs:[],stateMutability:"payable"},{type:"function",name:"getCallPoliciesForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]}],stateMutability:"view"},{type:"function",name:"getSessionExpirationForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"uint256",internalType:"uint256"}],stateMutability:"view"},{type:"function",name:"getSessionStateForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple",internalType:"struct SessionLib.SessionState",components:[{name:"transferValue",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]},{name:"callValue",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]},{name:"callParams",type:"tuple[]",internalType:"struct SessionLib.LimitState[]",components:[{name:"remaining",type:"uint256",internalType:"uint256"},{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"index",type:"uint256",internalType:"uint256"}]}]}],stateMutability:"view"},{type:"function",name:"getTransferPoliciesForSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}],stateMutability:"view"},{type:"function",name:"isWildcardSigner",inputs:[{name:"signer",type:"address",internalType:"address"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"function",name:"onERC1155BatchReceived",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256[]",internalType:"uint256[]"},{name:"",type:"uint256[]",internalType:"uint256[]"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"onERC1155Received",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"onERC721Received",inputs:[{name:"",type:"address",internalType:"address"},{name:"",type:"address",internalType:"address"},{name:"",type:"uint256",internalType:"uint256"},{name:"",type:"bytes",internalType:"bytes"}],outputs:[{name:"",type:"bytes4",internalType:"bytes4"}],stateMutability:"nonpayable"},{type:"function",name:"supportsInterface",inputs:[{name:"interfaceId",type:"bytes4",internalType:"bytes4"}],outputs:[{name:"",type:"bool",internalType:"bool"}],stateMutability:"view"},{type:"event",name:"Executed",inputs:[{name:"to",type:"address",indexed:!0,internalType:"address"},{name:"value",type:"uint256",indexed:!1,internalType:"uint256"},{name:"data",type:"bytes",indexed:!1,internalType:"bytes"}],anonymous:!1},{type:"event",name:"SessionCreated",inputs:[{name:"signer",type:"address",indexed:!0,internalType:"address"},{name:"sessionSpec",type:"tuple",indexed:!1,internalType:"struct SessionLib.SessionSpec",components:[{name:"signer",type:"address",internalType:"address"},{name:"isWildcard",type:"bool",internalType:"bool"},{name:"expiresAt",type:"uint256",internalType:"uint256"},{name:"callPolicies",type:"tuple[]",internalType:"struct SessionLib.CallSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]},{name:"constraints",type:"tuple[]",internalType:"struct SessionLib.Constraint[]",components:[{name:"condition",type:"uint8",internalType:"enum SessionLib.Condition"},{name:"index",type:"uint64",internalType:"uint64"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"limit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]}]},{name:"transferPolicies",type:"tuple[]",internalType:"struct SessionLib.TransferSpec[]",components:[{name:"target",type:"address",internalType:"address"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"},{name:"valueLimit",type:"tuple",internalType:"struct SessionLib.UsageLimit",components:[{name:"limitType",type:"uint8",internalType:"enum SessionLib.LimitType"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint256",internalType:"uint256"}]}]},{name:"uid",type:"bytes32",internalType:"bytes32"}]}],anonymous:!1},{type:"event",name:"ValueReceived",inputs:[{name:"from",type:"address",indexed:!0,internalType:"address"},{name:"value",type:"uint256",indexed:!1,internalType:"uint256"}],anonymous:!1},{type:"error",name:"AllowanceExceeded",inputs:[{name:"allowanceUsage",type:"uint256",internalType:"uint256"},{name:"limit",type:"uint256",internalType:"uint256"},{name:"period",type:"uint64",internalType:"uint64"}]},{type:"error",name:"CallPolicyViolated",inputs:[{name:"target",type:"address",internalType:"address"},{name:"selector",type:"bytes4",internalType:"bytes4"}]},{type:"error",name:"CallReverted",inputs:[]},{type:"error",name:"ConditionFailed",inputs:[{name:"param",type:"bytes32",internalType:"bytes32"},{name:"refValue",type:"bytes32",internalType:"bytes32"},{name:"condition",type:"uint8",internalType:"uint8"}]},{type:"error",name:"InvalidDataLength",inputs:[{name:"actualLength",type:"uint256",internalType:"uint256"},{name:"expectedLength",type:"uint256",internalType:"uint256"}]},{type:"error",name:"InvalidSignature",inputs:[{name:"msgSender",type:"address",internalType:"address"},{name:"thisAddress",type:"address",internalType:"address"}]},{type:"error",name:"LifetimeUsageExceeded",inputs:[{name:"lifetimeUsage",type:"uint256",internalType:"uint256"},{name:"limit",type:"uint256",internalType:"uint256"}]},{type:"error",name:"MaxValueExceeded",inputs:[{name:"value",type:"uint256",internalType:"uint256"},{name:"maxValuePerUse",type:"uint256",internalType:"uint256"}]},{type:"error",name:"NoCallsToExecute",inputs:[]},{type:"error",name:"SessionExpired",inputs:[]},{type:"error",name:"SessionExpiresTooSoon",inputs:[]},{type:"error",name:"SessionZeroSigner",inputs:[]},{type:"error",name:"TransferPolicyViolated",inputs:[{name:"target",type:"address",internalType:"address"}]},{type:"error",name:"UIDAlreadyProcessed",inputs:[]}];async function O(n,t,e){var y,a,i,r;if(((y=t==null?void 0:t.auth)==null?void 0:y.mode)!=="popup"&&((a=t==null?void 0:t.auth)==null?void 0:a.mode)!==void 0&&e.authenticateWithRedirect){const u=n.strategy;M.includes(u)&&await e.authenticateWithRedirect(u,(i=t==null?void 0:t.auth)==null?void 0:i.mode,(r=t==null?void 0:t.auth)==null?void 0:r.redirectUrl)}const p=(await e.connect(n)).user.account;return L({authAccount:p,client:n.client,createOptions:t,desiredChain:n.chain})}async function ee(n,t,e){n.authResult&&e.loginWithAuthToken&&await e.loginWithAuthToken(n.authResult);const s=await Z(e);if(!s)throw new Error("Failed to authenticate user.");const p=s.account;return L({authAccount:p,client:n.client,createOptions:t,desiredChain:n.chain})}async function q(n){const{connectSmartAccount:t}=await d(async()=>{const{connectSmartAccount:e}=await import("./index-7N5QjdwW.js").then(s=>s.i);return{connectSmartAccount:e}},__vite__mapDeps([8,2,9,3,10,11,12,13,6,5,14]));return t({chain:n.chain,client:n.client,personalAccount:n.authAccount},n.smartAccountOptions)}async function Z(n){const t=await n.getUser();switch(t.status){case"Logged In, Wallet Initialized":return t}}async function L(n){const{createOptions:t,authAccount:e,desiredChain:s,client:p}=n;let y,a;const i=t&&"executionMode"in t?t.executionMode:void 0;if(i&&(i.mode==="EIP4337"?y=i.smartAccount:i.mode==="EIP7702"&&(a=i)),t&&"smartAccount"in t&&(t!=null&&t.smartAccount)&&(y=t.smartAccount),y){const[r,u]=await q({authAccount:e,chain:s,client:p,smartAccountOptions:y});return{account:r,adminAccount:e,chain:u}}if(a){const r=s;if(!r)throw new Error("Chain is required for EIP-7702 execution, pass a chain when connecting the inAppWallet.");return{account:G({adminAccount:e,client:p,sponsorGas:a.sponsorGas}),adminAccount:e,chain:r}}return{account:e,chain:s||R}}export{ee as autoConnectInAppWallet,O as connectInAppWallet};
