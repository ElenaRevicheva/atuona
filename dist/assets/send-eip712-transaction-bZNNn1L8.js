import{e as _}from"./eth_sendRawTransaction-DPdnXbFR.js";import{aD as x,b1 as l,C as L,u as v,b4 as c,aA as B,g as z,b5 as D,r as u,a2 as S,aT as M}from"./main-C55H3jZm.js";import{concatHex as A}from"./concat-hex-BfAO60vP.js";import{s as $,t as O}from"./sha256-CxrYPaEa.js";import{a as H}from"./number-DhiSQStc.js";const b=H*32n;class W extends x{constructor({givenLength:e,maxBytecodeSize:a}){super(`Bytecode cannot be longer than ${a} bytes. Given length: ${e}`,{name:"BytecodeLengthExceedsMaxSizeError"})}}class k extends x{constructor({givenLengthInWords:e}){super(`Bytecode length in 32-byte words must be odd. Given length in words: ${e}`,{name:"BytecodeLengthInWordsMustBeOddError"})}}class R extends x{constructor({givenLength:e}){super(`The bytecode length in bytes must be divisible by 32. Given length: ${e}`,{name:"BytecodeLengthMustBeDivisibleBy32Error"})}}function U(t){const e=l(t);if(e.length%32!==0)throw new R({givenLength:e.length});if(e.length>b)throw new W({givenLength:e.length,maxBytecodeSize:b});const a=$(e),n=l(a),r=e.length/32;if(r%2===0)throw new k({givenLengthInWords:r});const o=l(r),s=L(o,{size:2}),i=new Uint8Array([1,0]);return n.set(i,0),n.set(s,2),n}function h(t){if(["string","number"].includes(typeof t)&&!Number.isInteger(Number(t)))throw new Error(`Expected value to be an integer to convert to a bigint, got ${t} of type ${typeof t}`);return t instanceof Uint8Array?BigInt(v(t)):BigInt(t)}const P=(t,e)=>typeof t=="bigint"?e(t):Array.isArray(t)?t.map(a=>P(a,e)):t&&typeof t=="object"?Object.fromEntries(Object.entries(t).map(([a,n])=>[a,P(n,e)])):t,T=50000n,C=t=>{const e=N(t);return{domain:{chainId:t.chainId,name:"zkSync",version:"2"},message:e,primaryType:"Transaction",types:{Transaction:[{name:"txType",type:"uint256"},{name:"from",type:"uint256"},{name:"to",type:"uint256"},{name:"gasLimit",type:"uint256"},{name:"gasPerPubdataByteLimit",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymaster",type:"uint256"},{name:"nonce",type:"uint256"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"factoryDeps",type:"bytes32[]"},{name:"paymasterInput",type:"bytes"}]}}};function N(t){const{gas:e,nonce:a,to:n,from:r,value:o,maxFeePerGas:s,maxPriorityFeePerGas:i,paymaster:m,paymasterInput:d,gasPerPubdata:y,data:p,factoryDeps:g}=t;return{data:p||"0x0",factoryDeps:(g==null?void 0:g.map(f=>c(U(f))))??[],from:BigInt(r),gasLimit:e??0n,gasPerPubdataByteLimit:y??T,maxFeePerGas:s??0n,maxPriorityFeePerGas:i??0n,nonce:a?BigInt(a):0n,paymaster:m?BigInt(m):0n,paymasterInput:d||"0x",to:n?BigInt(n):0n,txType:113n,value:o??0n}}async function V(t){const{account:e,transaction:a}=t,n=await w(t),r=await I({account:e,chainId:a.chain.id,eip712Transaction:n}),o=B(a),s=await _(o,r);return{chain:a.chain,client:a.client,transactionHash:s}}async function I(t){const{account:e,eip712Transaction:a,chainId:n}=t,r=C(a),o=await e.signTypedData({...r});return Z({...a,chainId:n,customSignature:o})}async function w(t){const{account:e,transaction:a}=t,{gas:n,maxFeePerGas:r,maxPriorityFeePerGas:o,gasPerPubdata:s}=await E({from:z(e.address),transaction:a});return{...await D({from:e.address,transaction:{...a,gas:n,maxFeePerGas:r,maxPriorityFeePerGas:o}}),...a.eip712,from:e.address,gasPerPubdata:s}}function Z(t){const{chainId:e,gas:a,nonce:n,to:r,from:o,value:s,maxFeePerGas:i,maxPriorityFeePerGas:m,customSignature:d,factoryDeps:y,paymaster:p,paymasterInput:g,gasPerPubdata:f,data:F}=t,G=[n?c(n):"0x",m?c(m):"0x",i?c(i):"0x",a?c(a):"0x",r??"0x",s?c(s):"0x",F??"0x0",c(e),c(""),c(""),c(e),o??"0x",f?c(f):c(T),y??[],d??"0x",p&&g?[p,g]:[]];return A(["0x71",O(G)])}async function E(t){const{transaction:e,from:a}=t;let[n,r,o,s]=await Promise.all([u(e.gas),u(e.maxFeePerGas),u(e.maxPriorityFeePerGas),u(e.eip712)]),i=s==null?void 0:s.gasPerPubdata;if(n===void 0||r===void 0||o===void 0){const m=B(e),d=await q({from:a,transaction:e}),y=await m({method:"zks_estimateFee",params:[P(d,c)]});n=h(y.gas_limit)*2n,r=h(y.max_fee_per_gas)*2n,o=h(y.max_priority_fee_per_gas)||1n,i=h(y.gas_per_pubdata_limit)*2n,i<50000n&&(i=50000n)}return{gas:n,gasPerPubdata:i,maxFeePerGas:r,maxPriorityFeePerGas:o}}async function q(t){var m;const{transaction:e,from:a}=t,[n,r,o,s]=await Promise.all([S(e),u(e.to),u(e.value),u(e.eip712)]),i=s==null?void 0:s.gasPerPubdata;return{data:n,eip712Meta:{...s,factoryDeps:(m=s==null?void 0:s.factoryDeps)==null?void 0:m.map(d=>Array.from(M(d))),gasPerPubdata:i||50000n},from:a,gasPerPubdata:i,to:r,type:"0x71",value:o}}const j=Object.freeze(Object.defineProperty({__proto__:null,getZkGasFees:E,populateEip712Transaction:w,sendEip712Transaction:V,signEip712Transaction:I},Symbol.toStringTag,{value:"Module"}));export{j as a,w as p,I as s,h as t};
